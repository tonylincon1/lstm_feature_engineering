{"cells":[{"cell_type":"markdown","source":["# Preparações"],"metadata":{"id":"S1SjD-NU1pmB"}},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":97160,"status":"ok","timestamp":1654599311879,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"_7vsZu4J0Jyk","colab":{"base_uri":"https://localhost:8080/"},"outputId":"29bbedd0-daf7-455a-adbf-987c968f2b93"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K     |████████████████████████████████| 320 kB 19.0 MB/s \n","\u001b[K     |████████████████████████████████| 636 kB 54.9 MB/s \n","\u001b[K     |████████████████████████████████| 1.7 MB 48.4 MB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","\u001b[K     |████████████████████████████████| 1.3 MB 13.7 MB/s \n","\u001b[K     |████████████████████████████████| 167 kB 40.6 MB/s \n","\u001b[K     |████████████████████████████████| 56 kB 1.5 MB/s \n","\u001b[K     |████████████████████████████████| 262 kB 46.9 MB/s \n","\u001b[K     |████████████████████████████████| 88 kB 4.3 MB/s \n","\u001b[K     |████████████████████████████████| 2.0 MB 34.2 MB/s \n","\u001b[K     |████████████████████████████████| 6.8 MB 34.6 MB/s \n","\u001b[K     |████████████████████████████████| 17.8 MB 727 kB/s \n","\u001b[K     |████████████████████████████████| 120 kB 62.0 MB/s \n","\u001b[K     |████████████████████████████████| 1.3 MB 44.9 MB/s \n","\u001b[K     |████████████████████████████████| 690 kB 62.9 MB/s \n","\u001b[K     |████████████████████████████████| 261 kB 59.2 MB/s \n","\u001b[K     |████████████████████████████████| 102 kB 13.4 MB/s \n","\u001b[K     |████████████████████████████████| 63 kB 2.1 MB/s \n","\u001b[K     |████████████████████████████████| 11.1 MB 49.0 MB/s \n","\u001b[K     |████████████████████████████████| 3.1 MB 47.3 MB/s \n","\u001b[K     |████████████████████████████████| 303 kB 72.1 MB/s \n","\u001b[K     |████████████████████████████████| 812 kB 67.1 MB/s \n","\u001b[K     |████████████████████████████████| 25.9 MB 1.4 MB/s \n","\u001b[K     |████████████████████████████████| 271 kB 60.3 MB/s \n","\u001b[K     |████████████████████████████████| 14.8 MB 47.3 MB/s \n","\u001b[K     |████████████████████████████████| 209 kB 62.0 MB/s \n","\u001b[K     |████████████████████████████████| 62 kB 856 kB/s \n","\u001b[K     |████████████████████████████████| 79 kB 9.4 MB/s \n","\u001b[K     |████████████████████████████████| 146 kB 60.8 MB/s \n","\u001b[K     |████████████████████████████████| 181 kB 59.5 MB/s \n","\u001b[K     |████████████████████████████████| 54 kB 3.3 MB/s \n","\u001b[K     |████████████████████████████████| 63 kB 1.9 MB/s \n","\u001b[K     |████████████████████████████████| 78 kB 8.4 MB/s \n","\u001b[K     |████████████████████████████████| 1.7 MB 50.2 MB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","\u001b[K     |████████████████████████████████| 1.7 MB 48.6 MB/s \n","\u001b[K     |████████████████████████████████| 1.1 MB 36.9 MB/s \n","\u001b[?25h  Building wheel for htmlmin (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for imagehash (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for databricks-cli (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pyLDAvis (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for umap-learn (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pynndescent (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","xarray-einstats 0.2.2 requires numpy>=1.21, but you have numpy 1.19.5 which is incompatible.\n","tensorflow 2.8.2+zzzcolab20220527125636 requires numpy>=1.20, but you have numpy 1.19.5 which is incompatible.\n","google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.27.1 which is incompatible.\n","datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\n","albumentations 0.1.12 requires imgaug<0.2.7,>=0.2.5, but you have imgaug 0.2.9 which is incompatible.\u001b[0m\n"]}],"source":["!pip install pycaret==2.3.10 markupsafe==2.0.1 pyyaml==5.4.1 -qq"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3603,"status":"ok","timestamp":1654599315473,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"TA9o4Sc6Qc6I","outputId":"2c4671f5-a6b5-4f3f-9a57-3e8e08c82f31"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/distributed/config.py:20: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\n","  defaults = yaml.load(f)\n"]}],"source":["import pandas as pd\n","from pycaret.classification import *\n","from tqdm import tqdm"]},{"cell_type":"code","source":["import os \n","import numpy as np\n","import pandas as pd\n","\n","import lightgbm as lgb\n","\n","import keras \n","from keras.layers import *\n","from keras.optimizers import *\n","from keras.models import Model\n","\n","from sklearn.metrics import f1_score \n","from sklearn.model_selection import KFold\n","from keras import backend as K"],"metadata":{"id":"z6u34g1-cEId","executionInfo":{"status":"ok","timestamp":1654599318095,"user_tz":180,"elapsed":2630,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pbmv4QPG2mlV","executionInfo":{"status":"ok","timestamp":1654599340015,"user_tz":180,"elapsed":21933,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"04df01dc-5cdb-4440-e51c-55642a639737"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"EzuQlWAIdlLY"},"source":["# Preparação"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":1675,"status":"ok","timestamp":1654599341683,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"SmglVpXXQx7w"},"outputs":[],"source":["df_train_values = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/train_values.csv\")"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":436,"status":"ok","timestamp":1654599342111,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"-owqop2mQ46i"},"outputs":[],"source":["df_train__label_values = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/train_labels.csv\")"]},{"cell_type":"code","source":["df_teste_values = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/test_values.csv\")"],"metadata":{"id":"ySZDbujXdFdB","executionInfo":{"status":"ok","timestamp":1654599343261,"user_tz":180,"elapsed":1155,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":40,"status":"ok","timestamp":1654599343272,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"71GSlzD9Q7cY","outputId":"0db9ded5-d871-4134-821e-7b7f854cb840"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   building_id  geo_level_1_id  geo_level_2_id  geo_level_3_id  \\\n","0       802906               6             487           12198   \n","1        28830               8             900            2812   \n","2        94947              21             363            8973   \n","3       590882              22             418           10694   \n","4       201944              11             131            1488   \n","\n","   count_floors_pre_eq  age  area_percentage  height_percentage  \\\n","0                    2   30                6                  5   \n","1                    2   10                8                  7   \n","2                    2   10                5                  5   \n","3                    2   10                6                  5   \n","4                    3   30                8                  9   \n","\n","  land_surface_condition foundation_type roof_type ground_floor_type  \\\n","0                      t               r         n                 f   \n","1                      o               r         n                 x   \n","2                      t               r         n                 f   \n","3                      t               r         n                 f   \n","4                      t               r         n                 f   \n","\n","  other_floor_type position plan_configuration  has_superstructure_adobe_mud  \\\n","0                q        t                  d                             1   \n","1                q        s                  d                             0   \n","2                x        t                  d                             0   \n","3                x        s                  d                             0   \n","4                x        s                  d                             1   \n","\n","   has_superstructure_mud_mortar_stone  has_superstructure_stone_flag  \\\n","0                                    1                              0   \n","1                                    1                              0   \n","2                                    1                              0   \n","3                                    1                              0   \n","4                                    0                              0   \n","\n","   has_superstructure_cement_mortar_stone  \\\n","0                                       0   \n","1                                       0   \n","2                                       0   \n","3                                       0   \n","4                                       0   \n","\n","   has_superstructure_mud_mortar_brick  \\\n","0                                    0   \n","1                                    0   \n","2                                    0   \n","3                                    0   \n","4                                    0   \n","\n","   has_superstructure_cement_mortar_brick  has_superstructure_timber  \\\n","0                                       0                          0   \n","1                                       0                          0   \n","2                                       0                          0   \n","3                                       0                          1   \n","4                                       0                          0   \n","\n","   has_superstructure_bamboo  has_superstructure_rc_non_engineered  \\\n","0                          0                                     0   \n","1                          0                                     0   \n","2                          0                                     0   \n","3                          1                                     0   \n","4                          0                                     0   \n","\n","   has_superstructure_rc_engineered  has_superstructure_other  \\\n","0                                 0                         0   \n","1                                 0                         0   \n","2                                 0                         0   \n","3                                 0                         0   \n","4                                 0                         0   \n","\n","  legal_ownership_status  count_families  has_secondary_use  \\\n","0                      v               1                  0   \n","1                      v               1                  0   \n","2                      v               1                  0   \n","3                      v               1                  0   \n","4                      v               1                  0   \n","\n","   has_secondary_use_agriculture  has_secondary_use_hotel  \\\n","0                              0                        0   \n","1                              0                        0   \n","2                              0                        0   \n","3                              0                        0   \n","4                              0                        0   \n","\n","   has_secondary_use_rental  has_secondary_use_institution  \\\n","0                         0                              0   \n","1                         0                              0   \n","2                         0                              0   \n","3                         0                              0   \n","4                         0                              0   \n","\n","   has_secondary_use_school  has_secondary_use_industry  \\\n","0                         0                           0   \n","1                         0                           0   \n","2                         0                           0   \n","3                         0                           0   \n","4                         0                           0   \n","\n","   has_secondary_use_health_post  has_secondary_use_gov_office  \\\n","0                              0                             0   \n","1                              0                             0   \n","2                              0                             0   \n","3                              0                             0   \n","4                              0                             0   \n","\n","   has_secondary_use_use_police  has_secondary_use_other  \n","0                             0                        0  \n","1                             0                        0  \n","2                             0                        0  \n","3                             0                        0  \n","4                             0                        0  "],"text/html":["\n","  <div id=\"df-a71a01c3-a906-4998-8c4e-0470327dce9f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_id</th>\n","      <th>geo_level_1_id</th>\n","      <th>geo_level_2_id</th>\n","      <th>geo_level_3_id</th>\n","      <th>count_floors_pre_eq</th>\n","      <th>age</th>\n","      <th>area_percentage</th>\n","      <th>height_percentage</th>\n","      <th>land_surface_condition</th>\n","      <th>foundation_type</th>\n","      <th>roof_type</th>\n","      <th>ground_floor_type</th>\n","      <th>other_floor_type</th>\n","      <th>position</th>\n","      <th>plan_configuration</th>\n","      <th>has_superstructure_adobe_mud</th>\n","      <th>has_superstructure_mud_mortar_stone</th>\n","      <th>has_superstructure_stone_flag</th>\n","      <th>has_superstructure_cement_mortar_stone</th>\n","      <th>has_superstructure_mud_mortar_brick</th>\n","      <th>has_superstructure_cement_mortar_brick</th>\n","      <th>has_superstructure_timber</th>\n","      <th>has_superstructure_bamboo</th>\n","      <th>has_superstructure_rc_non_engineered</th>\n","      <th>has_superstructure_rc_engineered</th>\n","      <th>has_superstructure_other</th>\n","      <th>legal_ownership_status</th>\n","      <th>count_families</th>\n","      <th>has_secondary_use</th>\n","      <th>has_secondary_use_agriculture</th>\n","      <th>has_secondary_use_hotel</th>\n","      <th>has_secondary_use_rental</th>\n","      <th>has_secondary_use_institution</th>\n","      <th>has_secondary_use_school</th>\n","      <th>has_secondary_use_industry</th>\n","      <th>has_secondary_use_health_post</th>\n","      <th>has_secondary_use_gov_office</th>\n","      <th>has_secondary_use_use_police</th>\n","      <th>has_secondary_use_other</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>802906</td>\n","      <td>6</td>\n","      <td>487</td>\n","      <td>12198</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>q</td>\n","      <td>t</td>\n","      <td>d</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>28830</td>\n","      <td>8</td>\n","      <td>900</td>\n","      <td>2812</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>o</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>x</td>\n","      <td>q</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94947</td>\n","      <td>21</td>\n","      <td>363</td>\n","      <td>8973</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>x</td>\n","      <td>t</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>590882</td>\n","      <td>22</td>\n","      <td>418</td>\n","      <td>10694</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>x</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>201944</td>\n","      <td>11</td>\n","      <td>131</td>\n","      <td>1488</td>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>x</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a71a01c3-a906-4998-8c4e-0470327dce9f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a71a01c3-a906-4998-8c4e-0470327dce9f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a71a01c3-a906-4998-8c4e-0470327dce9f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}],"source":["df_train_values.head()"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1654599343273,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"nuqKEYpoQ-A-","outputId":"48b7e921-5fe5-428b-835c-b95aa102edb7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   building_id  damage_grade\n","0       802906             3\n","1        28830             2\n","2        94947             3\n","3       590882             2\n","4       201944             3"],"text/html":["\n","  <div id=\"df-85ec6214-ab8a-4999-89f4-c83846f13a55\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_id</th>\n","      <th>damage_grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>802906</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>28830</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94947</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>590882</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>201944</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85ec6214-ab8a-4999-89f4-c83846f13a55')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-85ec6214-ab8a-4999-89f4-c83846f13a55 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-85ec6214-ab8a-4999-89f4-c83846f13a55');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}],"source":["df_train__label_values.head()"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1654599343274,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"U7mZTZ7_Q_5u","outputId":"8df95516-f7d4-4b31-bb82-1c4c68212a81"},"outputs":[{"output_type":"stream","name":"stdout","text":["(260601, 39)\n","(260601, 2)\n"]}],"source":["print(df_train_values.shape)\n","print(df_train__label_values.shape)"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":447,"status":"ok","timestamp":1654599343699,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"gHl8gsL0RBqS"},"outputs":[],"source":["df_train = pd.merge(df_train_values,df_train__label_values,how='inner',on='building_id')"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":25,"status":"ok","timestamp":1654599343700,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"kGjxs-YNRDUq","outputId":"c299deb5-93a0-44d7-8a07-248c19379f62"},"outputs":[{"output_type":"stream","name":"stdout","text":["(260601, 39)\n","(260601, 2)\n","(260601, 40)\n"]}],"source":["print(df_train_values.shape)\n","print(df_train__label_values.shape)\n","print(df_train.shape)"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1654599343701,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"wiIxHVBEREho","outputId":"2211726f-a444-4589-88c2-a4864bd0cd0a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["2    148259\n","3     87218\n","1     25124\n","Name: damage_grade, dtype: int64"]},"metadata":{},"execution_count":13}],"source":["df_train.damage_grade.value_counts()"]},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":19,"status":"ok","timestamp":1654599343702,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"XUiEdyyDRIzb"},"outputs":[],"source":["target = []\n","\n","for n in df_train.damage_grade:\n","    if n == 1:\n","        target.append(0)\n","    elif n == 2:\n","        target.append(1)\n","    elif n == 3:\n","        target.append(2)"]},{"cell_type":"code","execution_count":15,"metadata":{"executionInfo":{"elapsed":19,"status":"ok","timestamp":1654599343703,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"akbaNL-ZRLBG"},"outputs":[],"source":["df_train[\"damage_grade\"] = target"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1654599343704,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"4y8zYaYYRNEt","outputId":"7509902b-9c73-4a23-8a37-8faae0edd2e4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    148259\n","2     87218\n","0     25124\n","Name: damage_grade, dtype: int64"]},"metadata":{},"execution_count":16}],"source":["df_train.damage_grade.value_counts()"]},{"cell_type":"markdown","source":["# Geographic Location ID Embedding w/ Autoencoder"],"metadata":{"id":"G9kigXvVch-X"}},{"cell_type":"code","source":["train_x = df_train_values\n","train_y = df_train__label_values\n","test_x  = df_teste_values"],"metadata":{"id":"oKJ5OLZvc1e_","executionInfo":{"status":"ok","timestamp":1654599343705,"user_tz":180,"elapsed":18,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["geo1 = np.array(pd.get_dummies(pd.concat([train_x[\"geo_level_1_id\"], test_x[\"geo_level_1_id\"]])))\n","geo2 = np.array(pd.get_dummies(pd.concat([train_x[\"geo_level_2_id\"], test_x[\"geo_level_2_id\"]])))\n","geo3 = np.array(pd.get_dummies(pd.concat([train_x[\"geo_level_3_id\"], test_x[\"geo_level_3_id\"]])))"],"metadata":{"id":"EDcPN3avclU9","executionInfo":{"status":"ok","timestamp":1654599376220,"user_tz":180,"elapsed":32531,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["geo3.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"06zSo8yidPjb","executionInfo":{"status":"ok","timestamp":1654599376221,"user_tz":180,"elapsed":15,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"48237d3c-c247-43a3-a2ee-dd0cf96aec0a"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(347469, 11861)"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["def NET():\n","    inp = Input((geo3.shape[1],))\n","    i1 = Dense(16, name=\"intermediate\")(inp)\n","    x2 = Dense(geo2.shape[1], activation='sigmoid')(i1)\n","    x1 = Dense(geo1.shape[1], activation='sigmoid')(i1)\n","\n","    model = Model(inp, [x2,x1])\n","    model.compile(loss=\"binary_crossentropy\", optimizer=\"adam\")\n","    return model"],"metadata":{"id":"C203IFkvdS8j","executionInfo":{"status":"ok","timestamp":1654599376222,"user_tz":180,"elapsed":10,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["model = NET()\n","model.fit(geo3, [geo2, geo1], batch_size=128, epochs=10, verbose=2)\n","model.save(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/output/models/geo_embed.h5\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":347},"id":"J44zSKmXdU14","executionInfo":{"status":"error","timestamp":1654568554469,"user_tz":180,"elapsed":23617,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"b223cb4d-6018-4a09-8880-1b4b005b5f52"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-8277a148d052>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mNET\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgeo3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mgeo2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgeo1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m128\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/output/models/geo_embed.h5\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1346\u001b[0m           \u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1347\u001b[0m           \u001b[0mmodel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1348\u001b[0;31m           steps_per_execution=self._steps_per_execution)\n\u001b[0m\u001b[1;32m   1349\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1350\u001b[0m       \u001b[0;31m# Container that configures and calls `tf.keras.Callback`s.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/data_adapter.py\u001b[0m in \u001b[0;36mget_data_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m   1397\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"model\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"_cluster_coordinator\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1398\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0m_ClusterCoordinatorDataHandler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1399\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mDataHandler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1400\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1401\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/data_adapter.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, x, y, sample_weight, batch_size, steps_per_epoch, initial_epoch, epochs, shuffle, class_weight, max_queue_size, workers, use_multiprocessing, model, steps_per_execution, distribute)\u001b[0m\n\u001b[1;32m   1159\u001b[0m         \u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1160\u001b[0m         \u001b[0mdistribution_strategy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_strategy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1161\u001b[0;31m         model=model)\n\u001b[0m\u001b[1;32m   1162\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1163\u001b[0m     \u001b[0mstrategy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_strategy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/data_adapter.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, x, y, sample_weights, sample_weight_modes, batch_size, epochs, steps, shuffle, **kwargs)\u001b[0m\n\u001b[1;32m    234\u001b[0m                **kwargs):\n\u001b[1;32m    235\u001b[0m     \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mTensorLikeDataAdapter\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 236\u001b[0;31m     \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weights\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_tensorlike\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weights\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    237\u001b[0m     sample_weight_modes = broadcast_sample_weight_modes(\n\u001b[1;32m    238\u001b[0m         sample_weights, sample_weight_modes)\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/data_adapter.py\u001b[0m in \u001b[0;36m_process_tensorlike\u001b[0;34m(inputs)\u001b[0m\n\u001b[1;32m   1041\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1042\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1043\u001b[0;31m   \u001b[0minputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap_structure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_convert_single_tensor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1044\u001b[0m   \u001b[0;32mreturn\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlist_to_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1045\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/nest.py\u001b[0m in \u001b[0;36mmap_structure\u001b[0;34m(func, *structure, **kwargs)\u001b[0m\n\u001b[1;32m    912\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    913\u001b[0m   return pack_sequence_as(\n\u001b[0;32m--> 914\u001b[0;31m       \u001b[0mstructure\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mentries\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    915\u001b[0m       expand_composites=expand_composites)\n\u001b[1;32m    916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/nest.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    912\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    913\u001b[0m   return pack_sequence_as(\n\u001b[0;32m--> 914\u001b[0;31m       \u001b[0mstructure\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mentries\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    915\u001b[0m       expand_composites=expand_composites)\n\u001b[1;32m    916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/data_adapter.py\u001b[0m in \u001b[0;36m_convert_single_tensor\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m   1036\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloating\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1037\u001b[0m         \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbackend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloatx\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1038\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconvert_to_tensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1039\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0m_is_scipy_sparse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1040\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0m_scipy_sparse_to_sparse_tensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/dispatch.py\u001b[0m in \u001b[0;36mop_dispatch_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m   1080\u001b[0m       \u001b[0;31m# Fallback dispatch system (dispatch v1):\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1081\u001b[0m       \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1082\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch_target\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1083\u001b[0m       \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1084\u001b[0m         \u001b[0;31m# Note: convert_to_eager_tensor currently raises a ValueError, not a\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36mconvert_to_tensor_v2_with_dispatch\u001b[0;34m(value, dtype, dtype_hint, name)\u001b[0m\n\u001b[1;32m   1558\u001b[0m   \"\"\"\n\u001b[1;32m   1559\u001b[0m   return convert_to_tensor_v2(\n\u001b[0;32m-> 1560\u001b[0;31m       value, dtype=dtype, dtype_hint=dtype_hint, name=name)\n\u001b[0m\u001b[1;32m   1561\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1562\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36mconvert_to_tensor_v2\u001b[0;34m(value, dtype, dtype_hint, name)\u001b[0m\n\u001b[1;32m   1568\u001b[0m       \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1569\u001b[0m       \u001b[0mpreferred_dtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype_hint\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1570\u001b[0;31m       as_ref=False)\n\u001b[0m\u001b[1;32m   1571\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1572\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/profiler/trace.py\u001b[0m in \u001b[0;36mwrapped\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    181\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mTrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrace_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mtrace_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    182\u001b[0m           \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 183\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36mconvert_to_tensor\u001b[0;34m(value, dtype, name, as_ref, preferred_dtype, dtype_hint, ctx, accepted_result_types)\u001b[0m\n\u001b[1;32m   1693\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1694\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1695\u001b[0;31m       \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconversion_func\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_ref\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mas_ref\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1696\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1697\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mNotImplemented\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/tensor_conversion_registry.py\u001b[0m in \u001b[0;36m_default_conversion_function\u001b[0;34m(***failed resolving arguments***)\u001b[0m\n\u001b[1;32m     46\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0m_default_conversion_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_ref\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     47\u001b[0m   \u001b[0;32mdel\u001b[0m \u001b[0mas_ref\u001b[0m  \u001b[0;31m# Unused.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 48\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mconstant_op\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconstant\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36mconstant\u001b[0;34m(value, dtype, shape, name)\u001b[0m\n\u001b[1;32m    266\u001b[0m   \"\"\"\n\u001b[1;32m    267\u001b[0m   return _constant_impl(value, dtype, shape, name, verify_shape=False,\n\u001b[0;32m--> 268\u001b[0;31m                         allow_broadcast=True)\n\u001b[0m\u001b[1;32m    269\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    270\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36m_constant_impl\u001b[0;34m(value, dtype, shape, name, verify_shape, allow_broadcast)\u001b[0m\n\u001b[1;32m    277\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mtrace\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"tf.constant\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    278\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0m_constant_eager_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mctx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverify_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 279\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_constant_eager_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mctx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverify_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    280\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    281\u001b[0m   \u001b[0mg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_default_graph\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36m_constant_eager_impl\u001b[0;34m(ctx, value, dtype, shape, verify_shape)\u001b[0m\n\u001b[1;32m    302\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0m_constant_eager_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mctx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverify_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    303\u001b[0m   \u001b[0;34m\"\"\"Creates a constant on the current device.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 304\u001b[0;31m   \u001b[0mt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconvert_to_eager_tensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mctx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    305\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mshape\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    306\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36mconvert_to_eager_tensor\u001b[0;34m(value, ctx, dtype)\u001b[0m\n\u001b[1;32m    100\u001b[0m       \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdtypes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_datatype_enum\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    101\u001b[0m   \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 102\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mEagerTensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdevice_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    103\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    104\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["model = NET()\n","model.load_weights(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/output/models/geo_embed.h5\")"],"metadata":{"id":"KgLJ5jsidaa2","executionInfo":{"status":"ok","timestamp":1654599377318,"user_tz":180,"elapsed":1105,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["get_int_layer_output = K.function([model.layers[0].input],\n","                                  [model.layers[1].output])"],"metadata":{"id":"efMxpf0Ods9u","executionInfo":{"status":"ok","timestamp":1654599377319,"user_tz":180,"elapsed":12,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["model.layers[0].input"],"metadata":{"id":"R49ADtm9gREc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["out = []\n","\n","contador = 0\n","for dat in tqdm(range(1,len(geo3[:260601]))):\n","    dat = geo3[contador:dat]\n","    layer_output = get_int_layer_output([[dat]])[0]\n","    out.append(layer_output)\n","    contador = contador + 1\n","\n","out = np.array(out)\n","out = np.squeeze(out)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eWA-zWUddypC","executionInfo":{"status":"ok","timestamp":1654599880608,"user_tz":180,"elapsed":272651,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"0c2cb55a-2559-4f35-dab8-bf5ff54c7103"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 260600/260600 [04:32<00:00, 957.96it/s]\n"]}]},{"cell_type":"code","source":["train_x = train_x[:260600]\n","train_data = pd.get_dummies(train_x.copy())\n","train_data = train_data[:260600]"],"metadata":{"id":"RHG7kc9goNFA","executionInfo":{"status":"ok","timestamp":1654599881029,"user_tz":180,"elapsed":454,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["train_data = pd.get_dummies(train_x.copy())\n","train_data = train_data.drop(['geo_level_1_id', 'geo_level_2_id', 'geo_level_3_id'], axis=1)\n","train_data = train_data.assign(geo_feat1=out[:,0],\n","                               geo_feat2=out[:,1],\n","                               geo_feat3=out[:,2],  \n","                               geo_feat4=out[:,3],\n","                               geo_feat5=out[:,4],    \n","                               geo_feat6=out[:,5],\n","                               geo_feat7=out[:,6],\n","                               geo_feat8=out[:,7],\n","                               geo_feat9=out[:,8],\n","                               geo_feat10=out[:,9],\n","                               geo_feat11=out[:,10],\n","                               geo_feat12=out[:,11],\n","                               geo_feat13=out[:,12],\n","                               geo_feat14=out[:,13],\n","                               geo_feat15=out[:,14],           \n","                               geo_feat16=out[:,15])"],"metadata":{"id":"H3HBtgNDftzM","executionInfo":{"status":"ok","timestamp":1654599881690,"user_tz":180,"elapsed":664,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["train_data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mOEKRt8JoJge","executionInfo":{"status":"ok","timestamp":1654568826761,"user_tz":180,"elapsed":30,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"771002f0-fd04-4f94-93d3-12129813fd26"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['building_id', 'count_floors_pre_eq', 'age', 'area_percentage',\n","       'height_percentage', 'has_superstructure_adobe_mud',\n","       'has_superstructure_mud_mortar_stone', 'has_superstructure_stone_flag',\n","       'has_superstructure_cement_mortar_stone',\n","       'has_superstructure_mud_mortar_brick',\n","       'has_superstructure_cement_mortar_brick', 'has_superstructure_timber',\n","       'has_superstructure_bamboo', 'has_superstructure_rc_non_engineered',\n","       'has_superstructure_rc_engineered', 'has_superstructure_other',\n","       'count_families', 'has_secondary_use', 'has_secondary_use_agriculture',\n","       'has_secondary_use_hotel', 'has_secondary_use_rental',\n","       'has_secondary_use_institution', 'has_secondary_use_school',\n","       'has_secondary_use_industry', 'has_secondary_use_health_post',\n","       'has_secondary_use_gov_office', 'has_secondary_use_use_police',\n","       'has_secondary_use_other', 'land_surface_condition_n',\n","       'land_surface_condition_o', 'land_surface_condition_t',\n","       'foundation_type_h', 'foundation_type_i', 'foundation_type_r',\n","       'foundation_type_u', 'foundation_type_w', 'roof_type_n', 'roof_type_q',\n","       'roof_type_x', 'ground_floor_type_f', 'ground_floor_type_m',\n","       'ground_floor_type_v', 'ground_floor_type_x', 'ground_floor_type_z',\n","       'other_floor_type_j', 'other_floor_type_q', 'other_floor_type_s',\n","       'other_floor_type_x', 'position_j', 'position_o', 'position_s',\n","       'position_t', 'plan_configuration_a', 'plan_configuration_c',\n","       'plan_configuration_d', 'plan_configuration_f', 'plan_configuration_m',\n","       'plan_configuration_n', 'plan_configuration_o', 'plan_configuration_q',\n","       'plan_configuration_s', 'plan_configuration_u',\n","       'legal_ownership_status_a', 'legal_ownership_status_r',\n","       'legal_ownership_status_v', 'legal_ownership_status_w', 'geo_feat1',\n","       'geo_feat2', 'geo_feat3', 'geo_feat4', 'geo_feat5', 'geo_feat6',\n","       'geo_feat7', 'geo_feat8', 'geo_feat9', 'geo_feat10', 'geo_feat11',\n","       'geo_feat12', 'geo_feat13', 'geo_feat14', 'geo_feat15', 'geo_feat16'],\n","      dtype='object')"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["def threshold_arr(array):\n","    new_arr = []\n","    for ix, val in enumerate(array):\n","        loc = np.array(val).argmax(axis=0)\n","        k = list(np.zeros((len(val))))\n","        k[loc]=1\n","        new_arr.append(k)\n","        \n","    return np.array(new_arr)"],"metadata":{"id":"qfYzo2b9oksI","executionInfo":{"status":"ok","timestamp":1654599377320,"user_tz":180,"elapsed":11,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["# LightGBM Training"],"metadata":{"id":"nFc4bb3ZoehJ"}},{"cell_type":"code","source":["y = np.array(train_y[\"damage_grade\"])-1\n","\n","df = train_data.drop([\"building_id\"], axis=1)\n","x = np.array(df)\n","\n","kf = KFold(n_splits=5, shuffle=True, random_state=232)\n","for ix, (train_index, test_index) in enumerate(kf.split(x)):\n","    lgb_params = {\n","        \"objective\" : \"multiclass\",\n","        \"num_class\":3,\n","        \"metric\" : \"multi_error\",\n","        \"boosting\": 'gbdt',\n","        \"max_depth\" : -1,\n","        \"num_leaves\" : 30,\n","        \"learning_rate\" : 0.1,\n","        \"feature_fraction\" : 0.5,\n","        \"min_sum_hessian_in_leaf\" : 0.1,\n","        \"max_bin\":8192,\n","        \"verbosity\" : 1,\n","        \"num_threads\":6,\n","        \"seed\": 232\n","    }\n","\n","    x_train, x_val, y_train, y_val = x[train_index], x[test_index], y[train_index], y[test_index]\n","\n","    train_data = lgb.Dataset(x_train, label=y_train)\n","    val_data   = lgb.Dataset(x_val, label=y_val)\n","\n","    lgb_clf = lgb.train(lgb_params,\n","                        train_data,\n","                        20000,\n","                        valid_sets = [val_data],\n","                        early_stopping_rounds=3000,\n","                        verbose_eval = 1000)\n","\n","    y_pred = lgb_clf.predict(x_val)\n","    print(\"F1-MICRO SCORE: \", f1_score(np.array(pd.get_dummies(y_val)), threshold_arr(y_pred), average='micro'))\n","    lgb_clf.save_model(f\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/output/models/model{ix}.txt\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r0YL6hnboc4q","executionInfo":{"status":"ok","timestamp":1654573432850,"user_tz":180,"elapsed":4585161,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"618fe3c6-59e3-4b7a-e065-563a3e2a8929"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[LightGBM] [Warning] Auto-choosing col-wise multi-threading, the overhead of testing was 0.312971 seconds.\n","You can set `force_col_wise=true` to remove the overhead.\n","[LightGBM] [Info] Total Bins 120452\n","[LightGBM] [Info] Number of data points in the train set: 208480, number of used features: 81\n","[LightGBM] [Info] Start training from score -2.340268\n","[LightGBM] [Info] Start training from score -0.563817\n","[LightGBM] [Info] Start training from score -1.094625\n","Training until validation scores don't improve for 3000 rounds\n","[1000]\tvalid_0's multi_error: 0.248676\n","[2000]\tvalid_0's multi_error: 0.247774\n","[3000]\tvalid_0's multi_error: 0.249348\n","[4000]\tvalid_0's multi_error: 0.251228\n","Early stopping, best iteration is:\n","[1948]\tvalid_0's multi_error: 0.247314\n","F1-MICRO SCORE:  0.7526861089792786\n","[LightGBM] [Warning] Auto-choosing col-wise multi-threading, the overhead of testing was 0.179763 seconds.\n","You can set `force_col_wise=true` to remove the overhead.\n","[LightGBM] [Info] Total Bins 120325\n","[LightGBM] [Info] Number of data points in the train set: 208480, number of used features: 79\n","[LightGBM] [Info] Start training from score -2.340169\n","[LightGBM] [Info] Start training from score -0.563530\n","[LightGBM] [Info] Start training from score -1.095141\n","Training until validation scores don't improve for 3000 rounds\n","[1000]\tvalid_0's multi_error: 0.249463\n","[2000]\tvalid_0's multi_error: 0.248062\n","[3000]\tvalid_0's multi_error: 0.24954\n","[4000]\tvalid_0's multi_error: 0.252015\n","Early stopping, best iteration is:\n","[1678]\tvalid_0's multi_error: 0.24716\n","F1-MICRO SCORE:  0.7528396009209518\n","[LightGBM] [Warning] Auto-choosing col-wise multi-threading, the overhead of testing was 0.170127 seconds.\n","You can set `force_col_wise=true` to remove the overhead.\n","[LightGBM] [Info] Total Bins 120401\n","[LightGBM] [Info] Number of data points in the train set: 208480, number of used features: 80\n","[LightGBM] [Info] Start training from score -2.337135\n","[LightGBM] [Info] Start training from score -0.564163\n","[LightGBM] [Info] Start training from score -1.094940\n","Training until validation scores don't improve for 3000 rounds\n","[1000]\tvalid_0's multi_error: 0.248081\n","[2000]\tvalid_0's multi_error: 0.246527\n","[3000]\tvalid_0's multi_error: 0.247928\n","[4000]\tvalid_0's multi_error: 0.24881\n","Early stopping, best iteration is:\n","[1528]\tvalid_0's multi_error: 0.24553\n","F1-MICRO SCORE:  0.7544704528012279\n","[LightGBM] [Warning] Auto-choosing col-wise multi-threading, the overhead of testing was 0.181833 seconds.\n","You can set `force_col_wise=true` to remove the overhead.\n","[LightGBM] [Info] Total Bins 120285\n","[LightGBM] [Info] Number of data points in the train set: 208480, number of used features: 79\n","[LightGBM] [Info] Start training from score -2.341614\n","[LightGBM] [Info] Start training from score -0.563766\n","[LightGBM] [Info] Start training from score -1.094324\n","Training until validation scores don't improve for 3000 rounds\n","[1000]\tvalid_0's multi_error: 0.248887\n","[2000]\tvalid_0's multi_error: 0.247659\n","[3000]\tvalid_0's multi_error: 0.248791\n","[4000]\tvalid_0's multi_error: 0.25\n","[5000]\tvalid_0's multi_error: 0.252111\n","Early stopping, best iteration is:\n","[2027]\tvalid_0's multi_error: 0.247064\n","F1-MICRO SCORE:  0.7529355333844974\n","[LightGBM] [Warning] Auto-choosing col-wise multi-threading, the overhead of testing was 0.174802 seconds.\n","You can set `force_col_wise=true` to remove the overhead.\n","[LightGBM] [Info] Total Bins 120278\n","[LightGBM] [Info] Number of data points in the train set: 208480, number of used features: 79\n","[LightGBM] [Info] Start training from score -2.336639\n","[LightGBM] [Info] Start training from score -0.564854\n","[LightGBM] [Info] Start training from score -1.093908\n","Training until validation scores don't improve for 3000 rounds\n","[1000]\tvalid_0's multi_error: 0.253607\n","[2000]\tvalid_0's multi_error: 0.251612\n","[3000]\tvalid_0's multi_error: 0.253051\n","[4000]\tvalid_0's multi_error: 0.254394\n","Early stopping, best iteration is:\n","[1823]\tvalid_0's multi_error: 0.250979\n","F1-MICRO SCORE:  0.7490214888718341\n"]}]},{"cell_type":"markdown","source":["# Create Submission File"],"metadata":{"id":"r-I_07_3rzrD"}},{"cell_type":"code","source":["out = []\n","\n","contador = 0\n","for dat in tqdm(range(1,len(geo3[260601:]))):\n","    dat = geo3[contador:dat]\n","    layer_output = get_int_layer_output([[dat]])[0]\n","    out.append(layer_output)\n","    contador = contador + 1\n","\n","out = np.array(out)\n","out = np.squeeze(out)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tzAdkqJvsYbl","executionInfo":{"status":"ok","timestamp":1654600604939,"user_tz":180,"elapsed":96571,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"a1265558-6084-4c6d-dc05-212021fd1782"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 86867/86867 [01:36<00:00, 903.10it/s]\n"]}]},{"cell_type":"code","source":["test_x = test_x[:86867]\n","test_data = test_x[:86867]"],"metadata":{"id":"GhO3xVmKsZQg","executionInfo":{"status":"ok","timestamp":1654600604941,"user_tz":180,"elapsed":10,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["test_data[:86867]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"AzQbwcC24xpx","executionInfo":{"status":"ok","timestamp":1654600848445,"user_tz":180,"elapsed":13,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"684c2499-456e-4faf-eaaf-aa01bc6025a2"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       building_id  count_floors_pre_eq  age  area_percentage  \\\n","0           300051                    3   20                7   \n","1            99355                    2   25               13   \n","2           890251                    2    5                4   \n","3           745817                    1    0               19   \n","4           421793                    3   15                8   \n","...            ...                  ...  ...              ...   \n","86862       640115                    2    5               16   \n","86863       310028                    3   70               20   \n","86864       663567                    3   25                6   \n","86865      1049160                    1   50                3   \n","86866       442785                    2    5                9   \n","\n","       height_percentage  has_superstructure_adobe_mud  \\\n","0                      6                             0   \n","1                      5                             0   \n","2                      5                             0   \n","3                      3                             0   \n","4                      7                             0   \n","...                  ...                           ...   \n","86862                  5                             0   \n","86863                  6                             0   \n","86864                  7                             1   \n","86865                  3                             0   \n","86866                  5                             1   \n","\n","       has_superstructure_mud_mortar_stone  has_superstructure_stone_flag  \\\n","0                                        1                              0   \n","1                                        1                              0   \n","2                                        1                              0   \n","3                                        0                              0   \n","4                                        1                              0   \n","...                                    ...                            ...   \n","86862                                    0                              0   \n","86863                                    1                              0   \n","86864                                    1                              1   \n","86865                                    1                              0   \n","86866                                    1                              0   \n","\n","       has_superstructure_cement_mortar_stone  \\\n","0                                           0   \n","1                                           0   \n","2                                           0   \n","3                                           0   \n","4                                           0   \n","...                                       ...   \n","86862                                       0   \n","86863                                       0   \n","86864                                       0   \n","86865                                       0   \n","86866                                       0   \n","\n","       has_superstructure_mud_mortar_brick  \\\n","0                                        0   \n","1                                        0   \n","2                                        0   \n","3                                        0   \n","4                                        0   \n","...                                    ...   \n","86862                                    0   \n","86863                                    0   \n","86864                                    0   \n","86865                                    0   \n","86866                                    0   \n","\n","       has_superstructure_cement_mortar_brick  has_superstructure_timber  \\\n","0                                           0                          0   \n","1                                           0                          0   \n","2                                           0                          0   \n","3                                           1                          0   \n","4                                           0                          0   \n","...                                       ...                        ...   \n","86862                                       0                          0   \n","86863                                       0                          1   \n","86864                                       0                          0   \n","86865                                       0                          1   \n","86866                                       0                          0   \n","\n","       has_superstructure_bamboo  has_superstructure_rc_non_engineered  \\\n","0                              0                                     0   \n","1                              0                                     0   \n","2                              0                                     0   \n","3                              0                                     0   \n","4                              0                                     0   \n","...                          ...                                   ...   \n","86862                          0                                     0   \n","86863                          0                                     0   \n","86864                          0                                     0   \n","86865                          0                                     0   \n","86866                          0                                     0   \n","\n","       has_superstructure_rc_engineered  has_superstructure_other  \\\n","0                                     0                         0   \n","1                                     0                         0   \n","2                                     0                         0   \n","3                                     0                         0   \n","4                                     0                         0   \n","...                                 ...                       ...   \n","86862                                 1                         0   \n","86863                                 0                         0   \n","86864                                 0                         0   \n","86865                                 0                         0   \n","86866                                 0                         0   \n","\n","       count_families  has_secondary_use  has_secondary_use_agriculture  \\\n","0                   1                  0                              0   \n","1                   1                  1                              1   \n","2                   1                  0                              0   \n","3                   2                  1                              0   \n","4                   1                  0                              0   \n","...               ...                ...                            ...   \n","86862               2                  1                              0   \n","86863               1                  1                              1   \n","86864               1                  0                              0   \n","86865               1                  0                              0   \n","86866               1                  0                              0   \n","\n","       has_secondary_use_hotel  has_secondary_use_rental  \\\n","0                            0                         0   \n","1                            0                         0   \n","2                            0                         0   \n","3                            0                         1   \n","4                            0                         0   \n","...                        ...                       ...   \n","86862                        1                         0   \n","86863                        0                         0   \n","86864                        0                         0   \n","86865                        0                         0   \n","86866                        0                         0   \n","\n","       has_secondary_use_institution  has_secondary_use_school  \\\n","0                                  0                         0   \n","1                                  0                         0   \n","2                                  0                         0   \n","3                                  0                         0   \n","4                                  0                         0   \n","...                              ...                       ...   \n","86862                              0                         0   \n","86863                              0                         0   \n","86864                              0                         0   \n","86865                              0                         0   \n","86866                              0                         0   \n","\n","       has_secondary_use_industry  has_secondary_use_health_post  \\\n","0                               0                              0   \n","1                               0                              0   \n","2                               0                              0   \n","3                               0                              0   \n","4                               0                              0   \n","...                           ...                            ...   \n","86862                           0                              0   \n","86863                           0                              0   \n","86864                           0                              0   \n","86865                           0                              0   \n","86866                           0                              0   \n","\n","       has_secondary_use_gov_office  has_secondary_use_use_police  \\\n","0                                 0                             0   \n","1                                 0                             0   \n","2                                 0                             0   \n","3                                 0                             0   \n","4                                 0                             0   \n","...                             ...                           ...   \n","86862                             0                             0   \n","86863                             0                             0   \n","86864                             0                             0   \n","86865                             0                             0   \n","86866                             0                             0   \n","\n","       has_secondary_use_other  land_surface_condition_n  \\\n","0                            0                         0   \n","1                            0                         0   \n","2                            0                         0   \n","3                            0                         0   \n","4                            0                         0   \n","...                        ...                       ...   \n","86862                        0                         0   \n","86863                        0                         0   \n","86864                        0                         1   \n","86865                        0                         0   \n","86866                        0                         0   \n","\n","       land_surface_condition_o  land_surface_condition_t  foundation_type_h  \\\n","0                             0                         1                  0   \n","1                             0                         1                  0   \n","2                             0                         1                  0   \n","3                             0                         1                  0   \n","4                             0                         1                  0   \n","...                         ...                       ...                ...   \n","86862                         0                         1                  0   \n","86863                         0                         1                  0   \n","86864                         0                         0                  0   \n","86865                         0                         1                  0   \n","86866                         0                         1                  0   \n","\n","       foundation_type_i  foundation_type_r  foundation_type_u  \\\n","0                      0                  1                  0   \n","1                      0                  1                  0   \n","2                      0                  1                  0   \n","3                      0                  1                  0   \n","4                      0                  1                  0   \n","...                  ...                ...                ...   \n","86862                  1                  0                  0   \n","86863                  0                  1                  0   \n","86864                  0                  1                  0   \n","86865                  0                  1                  0   \n","86866                  0                  1                  0   \n","\n","       foundation_type_w  roof_type_n  roof_type_q  roof_type_x  \\\n","0                      0            1            0            0   \n","1                      0            1            0            0   \n","2                      0            1            0            0   \n","3                      0            0            0            1   \n","4                      0            0            1            0   \n","...                  ...          ...          ...          ...   \n","86862                  0            0            0            1   \n","86863                  0            0            1            0   \n","86864                  0            1            0            0   \n","86865                  0            1            0            0   \n","86866                  0            1            0            0   \n","\n","       ground_floor_type_f  ground_floor_type_m  ground_floor_type_v  \\\n","0                        1                    0                    0   \n","1                        1                    0                    0   \n","2                        1                    0                    0   \n","3                        0                    0                    1   \n","4                        1                    0                    0   \n","...                    ...                  ...                  ...   \n","86862                    0                    0                    1   \n","86863                    1                    0                    0   \n","86864                    1                    0                    0   \n","86865                    1                    0                    0   \n","86866                    1                    0                    0   \n","\n","       ground_floor_type_x  ground_floor_type_z  other_floor_type_j  \\\n","0                        0                    0                   0   \n","1                        0                    0                   0   \n","2                        0                    0                   0   \n","3                        0                    0                   1   \n","4                        0                    0                   0   \n","...                    ...                  ...                 ...   \n","86862                    0                    0                   0   \n","86863                    0                    0                   0   \n","86864                    0                    0                   0   \n","86865                    0                    0                   1   \n","86866                    0                    0                   0   \n","\n","       other_floor_type_q  other_floor_type_s  other_floor_type_x  position_j  \\\n","0                       1                   0                   0           0   \n","1                       1                   0                   0           0   \n","2                       1                   0                   0           0   \n","3                       0                   0                   0           0   \n","4                       1                   0                   0           0   \n","...                   ...                 ...                 ...         ...   \n","86862                   0                   1                   0           0   \n","86863                   1                   0                   0           0   \n","86864                   1                   0                   0           0   \n","86865                   0                   0                   0           0   \n","86866                   1                   0                   0           0   \n","\n","       position_o  position_s  position_t  plan_configuration_a  \\\n","0               0           1           0                     0   \n","1               0           1           0                     0   \n","2               0           1           0                     0   \n","3               0           0           1                     0   \n","4               0           0           1                     0   \n","...           ...         ...         ...                   ...   \n","86862           0           1           0                     0   \n","86863           0           0           1                     0   \n","86864           0           1           0                     0   \n","86865           0           1           0                     0   \n","86866           0           1           0                     0   \n","\n","       plan_configuration_c  plan_configuration_d  plan_configuration_f  \\\n","0                         0                     1                     0   \n","1                         0                     1                     0   \n","2                         0                     1                     0   \n","3                         0                     1                     0   \n","4                         0                     1                     0   \n","...                     ...                   ...                   ...   \n","86862                     0                     1                     0   \n","86863                     0                     1                     0   \n","86864                     0                     1                     0   \n","86865                     0                     1                     0   \n","86866                     0                     1                     0   \n","\n","       plan_configuration_m  plan_configuration_n  plan_configuration_o  \\\n","0                         0                     0                     0   \n","1                         0                     0                     0   \n","2                         0                     0                     0   \n","3                         0                     0                     0   \n","4                         0                     0                     0   \n","...                     ...                   ...                   ...   \n","86862                     0                     0                     0   \n","86863                     0                     0                     0   \n","86864                     0                     0                     0   \n","86865                     0                     0                     0   \n","86866                     0                     0                     0   \n","\n","       plan_configuration_q  plan_configuration_s  plan_configuration_u  \\\n","0                         0                     0                     0   \n","1                         0                     0                     0   \n","2                         0                     0                     0   \n","3                         0                     0                     0   \n","4                         0                     0                     0   \n","...                     ...                   ...                   ...   \n","86862                     0                     0                     0   \n","86863                     0                     0                     0   \n","86864                     0                     0                     0   \n","86865                     0                     0                     0   \n","86866                     0                     0                     0   \n","\n","       legal_ownership_status_a  legal_ownership_status_r  \\\n","0                             0                         0   \n","1                             0                         0   \n","2                             0                         0   \n","3                             0                         0   \n","4                             0                         0   \n","...                         ...                       ...   \n","86862                         0                         0   \n","86863                         0                         0   \n","86864                         0                         0   \n","86865                         0                         0   \n","86866                         1                         0   \n","\n","       legal_ownership_status_v  legal_ownership_status_w  geo_feat1  \\\n","0                             1                         0   0.418456   \n","1                             1                         0   0.455311   \n","2                             1                         0   2.280500   \n","3                             1                         0   1.080158   \n","4                             1                         0   2.151010   \n","...                         ...                       ...        ...   \n","86862                         1                         0   1.162097   \n","86863                         0                         1  -0.268243   \n","86864                         1                         0   1.557673   \n","86865                         1                         0   2.858545   \n","86866                         0                         0   0.546904   \n","\n","       geo_feat2  geo_feat3  geo_feat4  geo_feat5  geo_feat6  geo_feat7  \\\n","0       1.573474   0.290186   1.385418   2.044306  -1.233857   0.814495   \n","1       1.653826  -0.590032   0.484869   0.953778  -1.714527  -1.081662   \n","2       1.703398   0.170643  -1.149626   1.375152  -1.844418  -1.130349   \n","3       1.392113   0.498317   1.876048  -0.296989  -0.978631  -1.237250   \n","4       2.266077  -1.196271   2.337579   1.290038   0.526027  -1.385312   \n","...          ...        ...        ...        ...        ...        ...   \n","86862  -0.461051  -1.256883   1.228462   1.243536  -0.264460  -1.804007   \n","86863   2.145258  -1.216704   1.807258   1.630791  -1.105302  -0.913516   \n","86864   0.848439  -0.980984   1.096915   1.429782  -1.091510  -0.827044   \n","86865   2.046307  -1.072755   2.094065  -0.597801  -1.782723   0.289512   \n","86866   1.652503  -0.546745   0.697128  -0.011629   0.804628  -0.431198   \n","\n","       geo_feat8  geo_feat9  geo_feat10  geo_feat11  geo_feat12  geo_feat13  \\\n","0       1.759849   2.147925    0.117935    0.280309   -2.010242   -1.553949   \n","1       1.631580  -0.319924   -1.035920   -1.234296   -2.094790    0.572575   \n","2       0.063029   2.173048   -0.910300    0.261152   -2.394719   -1.423128   \n","3       1.673378   1.847214    0.328906   -2.166196   -0.154759   -1.562671   \n","4       0.473823   1.968454   -1.911573   -1.845332   -1.884876    1.018932   \n","...          ...        ...         ...         ...         ...         ...   \n","86862   1.568311   2.311650   -1.313455    0.084025   -2.067061   -1.626081   \n","86863   1.546851   1.650758   -0.986531    0.078107    0.142172   -0.178932   \n","86864  -0.419236   0.746476    0.467034   -0.867942   -2.187681    0.662756   \n","86865  -0.172671   1.497127   -0.829246   -2.438990   -1.361694    0.136683   \n","86866   1.713114  -0.384834   -1.395230   -1.924300   -0.817848   -1.736953   \n","\n","       geo_feat14  geo_feat15  geo_feat16  \n","0        2.200981    1.565647    0.117510  \n","1        0.789134    0.865464   -0.241622  \n","2        2.560501    2.709120    1.935743  \n","3       -0.675002    2.663262    0.962407  \n","4       -0.504536    2.156327    1.971998  \n","...           ...         ...         ...  \n","86862    1.670023   -0.108993    1.685055  \n","86863    1.291193    1.569139    0.641602  \n","86864    1.250141    2.353295    0.393439  \n","86865    0.125450    1.419065    1.316666  \n","86866    2.203258    1.594384    1.684570  \n","\n","[86867 rows x 82 columns]"],"text/html":["\n","  <div id=\"df-5132ab3b-cc1b-4c68-9a0b-9728c896b90a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_id</th>\n","      <th>count_floors_pre_eq</th>\n","      <th>age</th>\n","      <th>area_percentage</th>\n","      <th>height_percentage</th>\n","      <th>has_superstructure_adobe_mud</th>\n","      <th>has_superstructure_mud_mortar_stone</th>\n","      <th>has_superstructure_stone_flag</th>\n","      <th>has_superstructure_cement_mortar_stone</th>\n","      <th>has_superstructure_mud_mortar_brick</th>\n","      <th>has_superstructure_cement_mortar_brick</th>\n","      <th>has_superstructure_timber</th>\n","      <th>has_superstructure_bamboo</th>\n","      <th>has_superstructure_rc_non_engineered</th>\n","      <th>has_superstructure_rc_engineered</th>\n","      <th>has_superstructure_other</th>\n","      <th>count_families</th>\n","      <th>has_secondary_use</th>\n","      <th>has_secondary_use_agriculture</th>\n","      <th>has_secondary_use_hotel</th>\n","      <th>has_secondary_use_rental</th>\n","      <th>has_secondary_use_institution</th>\n","      <th>has_secondary_use_school</th>\n","      <th>has_secondary_use_industry</th>\n","      <th>has_secondary_use_health_post</th>\n","      <th>has_secondary_use_gov_office</th>\n","      <th>has_secondary_use_use_police</th>\n","      <th>has_secondary_use_other</th>\n","      <th>land_surface_condition_n</th>\n","      <th>land_surface_condition_o</th>\n","      <th>land_surface_condition_t</th>\n","      <th>foundation_type_h</th>\n","      <th>foundation_type_i</th>\n","      <th>foundation_type_r</th>\n","      <th>foundation_type_u</th>\n","      <th>foundation_type_w</th>\n","      <th>roof_type_n</th>\n","      <th>roof_type_q</th>\n","      <th>roof_type_x</th>\n","      <th>ground_floor_type_f</th>\n","      <th>ground_floor_type_m</th>\n","      <th>ground_floor_type_v</th>\n","      <th>ground_floor_type_x</th>\n","      <th>ground_floor_type_z</th>\n","      <th>other_floor_type_j</th>\n","      <th>other_floor_type_q</th>\n","      <th>other_floor_type_s</th>\n","      <th>other_floor_type_x</th>\n","      <th>position_j</th>\n","      <th>position_o</th>\n","      <th>position_s</th>\n","      <th>position_t</th>\n","      <th>plan_configuration_a</th>\n","      <th>plan_configuration_c</th>\n","      <th>plan_configuration_d</th>\n","      <th>plan_configuration_f</th>\n","      <th>plan_configuration_m</th>\n","      <th>plan_configuration_n</th>\n","      <th>plan_configuration_o</th>\n","      <th>plan_configuration_q</th>\n","      <th>plan_configuration_s</th>\n","      <th>plan_configuration_u</th>\n","      <th>legal_ownership_status_a</th>\n","      <th>legal_ownership_status_r</th>\n","      <th>legal_ownership_status_v</th>\n","      <th>legal_ownership_status_w</th>\n","      <th>geo_feat1</th>\n","      <th>geo_feat2</th>\n","      <th>geo_feat3</th>\n","      <th>geo_feat4</th>\n","      <th>geo_feat5</th>\n","      <th>geo_feat6</th>\n","      <th>geo_feat7</th>\n","      <th>geo_feat8</th>\n","      <th>geo_feat9</th>\n","      <th>geo_feat10</th>\n","      <th>geo_feat11</th>\n","      <th>geo_feat12</th>\n","      <th>geo_feat13</th>\n","      <th>geo_feat14</th>\n","      <th>geo_feat15</th>\n","      <th>geo_feat16</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>300051</td>\n","      <td>3</td>\n","      <td>20</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.418456</td>\n","      <td>1.573474</td>\n","      <td>0.290186</td>\n","      <td>1.385418</td>\n","      <td>2.044306</td>\n","      <td>-1.233857</td>\n","      <td>0.814495</td>\n","      <td>1.759849</td>\n","      <td>2.147925</td>\n","      <td>0.117935</td>\n","      <td>0.280309</td>\n","      <td>-2.010242</td>\n","      <td>-1.553949</td>\n","      <td>2.200981</td>\n","      <td>1.565647</td>\n","      <td>0.117510</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>99355</td>\n","      <td>2</td>\n","      <td>25</td>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.455311</td>\n","      <td>1.653826</td>\n","      <td>-0.590032</td>\n","      <td>0.484869</td>\n","      <td>0.953778</td>\n","      <td>-1.714527</td>\n","      <td>-1.081662</td>\n","      <td>1.631580</td>\n","      <td>-0.319924</td>\n","      <td>-1.035920</td>\n","      <td>-1.234296</td>\n","      <td>-2.094790</td>\n","      <td>0.572575</td>\n","      <td>0.789134</td>\n","      <td>0.865464</td>\n","      <td>-0.241622</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>890251</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.280500</td>\n","      <td>1.703398</td>\n","      <td>0.170643</td>\n","      <td>-1.149626</td>\n","      <td>1.375152</td>\n","      <td>-1.844418</td>\n","      <td>-1.130349</td>\n","      <td>0.063029</td>\n","      <td>2.173048</td>\n","      <td>-0.910300</td>\n","      <td>0.261152</td>\n","      <td>-2.394719</td>\n","      <td>-1.423128</td>\n","      <td>2.560501</td>\n","      <td>2.709120</td>\n","      <td>1.935743</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>745817</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>19</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.080158</td>\n","      <td>1.392113</td>\n","      <td>0.498317</td>\n","      <td>1.876048</td>\n","      <td>-0.296989</td>\n","      <td>-0.978631</td>\n","      <td>-1.237250</td>\n","      <td>1.673378</td>\n","      <td>1.847214</td>\n","      <td>0.328906</td>\n","      <td>-2.166196</td>\n","      <td>-0.154759</td>\n","      <td>-1.562671</td>\n","      <td>-0.675002</td>\n","      <td>2.663262</td>\n","      <td>0.962407</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>421793</td>\n","      <td>3</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.151010</td>\n","      <td>2.266077</td>\n","      <td>-1.196271</td>\n","      <td>2.337579</td>\n","      <td>1.290038</td>\n","      <td>0.526027</td>\n","      <td>-1.385312</td>\n","      <td>0.473823</td>\n","      <td>1.968454</td>\n","      <td>-1.911573</td>\n","      <td>-1.845332</td>\n","      <td>-1.884876</td>\n","      <td>1.018932</td>\n","      <td>-0.504536</td>\n","      <td>2.156327</td>\n","      <td>1.971998</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>86862</th>\n","      <td>640115</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>16</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.162097</td>\n","      <td>-0.461051</td>\n","      <td>-1.256883</td>\n","      <td>1.228462</td>\n","      <td>1.243536</td>\n","      <td>-0.264460</td>\n","      <td>-1.804007</td>\n","      <td>1.568311</td>\n","      <td>2.311650</td>\n","      <td>-1.313455</td>\n","      <td>0.084025</td>\n","      <td>-2.067061</td>\n","      <td>-1.626081</td>\n","      <td>1.670023</td>\n","      <td>-0.108993</td>\n","      <td>1.685055</td>\n","    </tr>\n","    <tr>\n","      <th>86863</th>\n","      <td>310028</td>\n","      <td>3</td>\n","      <td>70</td>\n","      <td>20</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-0.268243</td>\n","      <td>2.145258</td>\n","      <td>-1.216704</td>\n","      <td>1.807258</td>\n","      <td>1.630791</td>\n","      <td>-1.105302</td>\n","      <td>-0.913516</td>\n","      <td>1.546851</td>\n","      <td>1.650758</td>\n","      <td>-0.986531</td>\n","      <td>0.078107</td>\n","      <td>0.142172</td>\n","      <td>-0.178932</td>\n","      <td>1.291193</td>\n","      <td>1.569139</td>\n","      <td>0.641602</td>\n","    </tr>\n","    <tr>\n","      <th>86864</th>\n","      <td>663567</td>\n","      <td>3</td>\n","      <td>25</td>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.557673</td>\n","      <td>0.848439</td>\n","      <td>-0.980984</td>\n","      <td>1.096915</td>\n","      <td>1.429782</td>\n","      <td>-1.091510</td>\n","      <td>-0.827044</td>\n","      <td>-0.419236</td>\n","      <td>0.746476</td>\n","      <td>0.467034</td>\n","      <td>-0.867942</td>\n","      <td>-2.187681</td>\n","      <td>0.662756</td>\n","      <td>1.250141</td>\n","      <td>2.353295</td>\n","      <td>0.393439</td>\n","    </tr>\n","    <tr>\n","      <th>86865</th>\n","      <td>1049160</td>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.858545</td>\n","      <td>2.046307</td>\n","      <td>-1.072755</td>\n","      <td>2.094065</td>\n","      <td>-0.597801</td>\n","      <td>-1.782723</td>\n","      <td>0.289512</td>\n","      <td>-0.172671</td>\n","      <td>1.497127</td>\n","      <td>-0.829246</td>\n","      <td>-2.438990</td>\n","      <td>-1.361694</td>\n","      <td>0.136683</td>\n","      <td>0.125450</td>\n","      <td>1.419065</td>\n","      <td>1.316666</td>\n","    </tr>\n","    <tr>\n","      <th>86866</th>\n","      <td>442785</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.546904</td>\n","      <td>1.652503</td>\n","      <td>-0.546745</td>\n","      <td>0.697128</td>\n","      <td>-0.011629</td>\n","      <td>0.804628</td>\n","      <td>-0.431198</td>\n","      <td>1.713114</td>\n","      <td>-0.384834</td>\n","      <td>-1.395230</td>\n","      <td>-1.924300</td>\n","      <td>-0.817848</td>\n","      <td>-1.736953</td>\n","      <td>2.203258</td>\n","      <td>1.594384</td>\n","      <td>1.684570</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>86867 rows × 82 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5132ab3b-cc1b-4c68-9a0b-9728c896b90a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5132ab3b-cc1b-4c68-9a0b-9728c896b90a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5132ab3b-cc1b-4c68-9a0b-9728c896b90a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["test_data = pd.get_dummies(test_x.copy())\n","test_data = test_data.drop(['geo_level_1_id', 'geo_level_2_id', 'geo_level_3_id'], axis=1)\n","test_data = test_data.assign(geo_feat1=out[:,0],\n","                             geo_feat2=out[:,1],\n","                             geo_feat3=out[:,2],  \n","                             geo_feat4=out[:,3],\n","                             geo_feat5=out[:,4],    \n","                             geo_feat6=out[:,5],\n","                             geo_feat7=out[:,6],\n","                             geo_feat8=out[:,7],\n","                             geo_feat9=out[:,8],\n","                             geo_feat10=out[:,9],\n","                             geo_feat11=out[:,10],\n","                             geo_feat12=out[:,11],\n","                             geo_feat13=out[:,12],\n","                             geo_feat14=out[:,13],\n","                             geo_feat15=out[:,14],           \n","                             geo_feat16=out[:,15])"],"metadata":{"id":"dcAPS4cDsbwx","executionInfo":{"status":"ok","timestamp":1654600605367,"user_tz":180,"elapsed":435,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["y = np.array(train_y[\"damage_grade\"])-1\n","\n","df = train_data.drop([\"building_id\"], axis=1)\n","x = np.array(df)\n","\n","models = []\n","for i in range(5):\n","    model = lgb.Booster(model_file=f\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/output/models/model{i}.txt\")\n","\n","    y_pred = model.predict(x)\n","    score  = f1_score(np.array(pd.get_dummies(y[:-1])), threshold_arr(y_pred), average='micro')\n","    print(\"F1-MICRO SCORE: \", score)\n","    models.append(model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UC6xTYwIo7v4","executionInfo":{"status":"ok","timestamp":1654600245995,"user_tz":180,"elapsed":364315,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"c0ae5bba-a103-4123-bdff-e2f1cb2c4fac"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["F1-MICRO SCORE:  0.819646968534152\n","F1-MICRO SCORE:  0.8120376055257099\n","F1-MICRO SCORE:  0.8086185725249424\n","F1-MICRO SCORE:  0.8207943207981581\n","F1-MICRO SCORE:  0.8154681504221029\n"]}]},{"cell_type":"code","source":["def ensemble(models, x):\n","    y_preds = []\n","    \n","    for model in models:\n","        y_pred = model.predict(x)\n","        y_preds.append(y_pred)\n","        \n","    init_y_pred = y_preds[0]\n","    for ypred in y_preds[1:]:\n","        init_y_pred += ypred\n","        \n","    y_pred = threshold_arr(init_y_pred)\n","    \n","    return y_pred"],"metadata":{"id":"5c5iDEB3r9Q9","executionInfo":{"status":"ok","timestamp":1654600245996,"user_tz":180,"elapsed":48,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["df = test_data.drop([\"building_id\"], axis=1)\n","x = np.array(df)"],"metadata":{"id":"1LxJmJKOsDP8","executionInfo":{"status":"ok","timestamp":1654600605368,"user_tz":180,"elapsed":15,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RPAuO9u1vv3h","executionInfo":{"status":"ok","timestamp":1654600605369,"user_tz":180,"elapsed":15,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"43fcfb38-9192-4c10-a97c-26ad86b3855a"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(86867, 81)"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MMzEak9_vjKw","executionInfo":{"status":"ok","timestamp":1654600605370,"user_tz":180,"elapsed":13,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"1faa1246-9c67-49fb-c8fc-436c44502e6c"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(86867, 81)"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["y_pred = ensemble(models, x)\n","y_pred = y_pred.argmax(axis=1)+1"],"metadata":{"id":"JbiDc42EsEn9","executionInfo":{"status":"ok","timestamp":1654600726465,"user_tz":180,"elapsed":121103,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["y_pred.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PtzMVfub3ywP","executionInfo":{"status":"ok","timestamp":1654600726469,"user_tz":180,"elapsed":22,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"3b3b0e11-5b06-4cda-b7b0-1361406f5c41"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(86867,)"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["sub_csv = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/submission_format.csv\")\n","\n","sub_csv[\"damage_grade\"][:-1] = y_pred\n","sub_csv.to_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/output/submit/envioLGBM.csv\", index=False)"],"metadata":{"id":"rVHw49-zsHQA","executionInfo":{"status":"ok","timestamp":1654600781971,"user_tz":180,"elapsed":813,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["sub_csv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"hz04gMK9x7q4","executionInfo":{"status":"ok","timestamp":1654600784561,"user_tz":180,"elapsed":292,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"4996d2f6-b832-4b4d-aa29-dceff6bcf52e"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       building_id  damage_grade\n","0           300051             3\n","1            99355             2\n","2           890251             3\n","3           745817             2\n","4           421793             2\n","...            ...           ...\n","86863       310028             3\n","86864       663567             2\n","86865      1049160             3\n","86866       442785             3\n","86867       501372             1\n","\n","[86868 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-0304fd9d-f21e-4a34-89f9-a99046d33bc2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_id</th>\n","      <th>damage_grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>300051</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>99355</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>890251</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>745817</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>421793</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>86863</th>\n","      <td>310028</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>86864</th>\n","      <td>663567</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>86865</th>\n","      <td>1049160</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>86866</th>\n","      <td>442785</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>86867</th>\n","      <td>501372</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>86868 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0304fd9d-f21e-4a34-89f9-a99046d33bc2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0304fd9d-f21e-4a34-89f9-a99046d33bc2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0304fd9d-f21e-4a34-89f9-a99046d33bc2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["y_pred = models[3].predict(x)"],"metadata":{"id":"CUskmDdyTjBS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = threshold_arr(y_pred).argmax(axis=1)+1"],"metadata":{"id":"e_a1nST9UCrp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sub_csv = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/submission_format.csv\")\n","\n","sub_csv[\"damage_grade\"][:-1] = y_pred\n","sub_csv.to_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/output/submit/envioLGBM_model_4.csv\", index=False)"],"metadata":{"id":"65VL5fKVT-ux"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sub_csv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"z-W3pyT1U4LZ","executionInfo":{"status":"ok","timestamp":1654574685990,"user_tz":180,"elapsed":343,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"d16c17d4-3b31-42c6-8c04-f1c713cf70f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       building_id  damage_grade\n","0           300051             3\n","1            99355             2\n","2           890251             3\n","3           745817             2\n","4           421793             2\n","...            ...           ...\n","86863       310028             2\n","86864       663567             2\n","86865      1049160             3\n","86866       442785             3\n","86867       501372             1\n","\n","[86868 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-261801f7-a38b-40ac-b6e0-1382df31993f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_id</th>\n","      <th>damage_grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>300051</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>99355</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>890251</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>745817</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>421793</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>86863</th>\n","      <td>310028</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>86864</th>\n","      <td>663567</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>86865</th>\n","      <td>1049160</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>86866</th>\n","      <td>442785</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>86867</th>\n","      <td>501372</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>86868 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-261801f7-a38b-40ac-b6e0-1382df31993f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-261801f7-a38b-40ac-b6e0-1382df31993f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-261801f7-a38b-40ac-b6e0-1382df31993f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":62}]}],"metadata":{"colab":{"collapsed_sections":["S1SjD-NU1pmB","EzuQlWAIdlLY","G9kigXvVch-X","nFc4bb3ZoehJ","r-I_07_3rzrD"],"name":"Treinamento - LightGBM","provenance":[],"authorship_tag":"ABX9TyPeRYKd0VzR+Q06lG/eodxD"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}