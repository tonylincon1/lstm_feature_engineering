{"cells":[{"cell_type":"markdown","source":["# Preparações"],"metadata":{"id":"S1SjD-NU1pmB"}},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":90830,"status":"ok","timestamp":1654194289717,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"_7vsZu4J0Jyk","colab":{"base_uri":"https://localhost:8080/"},"outputId":"59bc6b32-eee8-4534-ea26-03a8d1b9dabe"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K     |████████████████████████████████| 320 kB 5.0 MB/s \n","\u001b[K     |████████████████████████████████| 636 kB 52.1 MB/s \n","\u001b[K     |████████████████████████████████| 17.8 MB 629 kB/s \n","\u001b[K     |████████████████████████████████| 167 kB 65.2 MB/s \n","\u001b[K     |████████████████████████████████| 56 kB 4.9 MB/s \n","\u001b[K     |████████████████████████████████| 1.7 MB 49.7 MB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","\u001b[K     |████████████████████████████████| 88 kB 5.2 MB/s \n","\u001b[K     |████████████████████████████████| 2.0 MB 44.4 MB/s \n","\u001b[K     |████████████████████████████████| 120 kB 58.2 MB/s \n","\u001b[K     |████████████████████████████████| 262 kB 61.5 MB/s \n","\u001b[K     |████████████████████████████████| 6.8 MB 52.9 MB/s \n","\u001b[K     |████████████████████████████████| 1.3 MB 64.4 MB/s \n","\u001b[K     |████████████████████████████████| 1.3 MB 39.1 MB/s \n","\u001b[K     |████████████████████████████████| 261 kB 40.1 MB/s \n","\u001b[K     |████████████████████████████████| 63 kB 2.0 MB/s \n","\u001b[K     |████████████████████████████████| 11.1 MB 41.4 MB/s \n","\u001b[K     |████████████████████████████████| 3.1 MB 18.4 MB/s \n","\u001b[K     |████████████████████████████████| 690 kB 48.1 MB/s \n","\u001b[K     |████████████████████████████████| 102 kB 6.0 MB/s \n","\u001b[K     |████████████████████████████████| 303 kB 39.4 MB/s \n","\u001b[K     |████████████████████████████████| 812 kB 45.9 MB/s \n","\u001b[K     |████████████████████████████████| 25.9 MB 1.5 MB/s \n","\u001b[K     |████████████████████████████████| 271 kB 74.3 MB/s \n","\u001b[K     |████████████████████████████████| 14.8 MB 43.4 MB/s \n","\u001b[K     |████████████████████████████████| 146 kB 19.0 MB/s \n","\u001b[K     |████████████████████████████████| 209 kB 64.2 MB/s \n","\u001b[K     |████████████████████████████████| 62 kB 674 kB/s \n","\u001b[K     |████████████████████████████████| 79 kB 7.3 MB/s \n","\u001b[K     |████████████████████████████████| 181 kB 55.5 MB/s \n","\u001b[K     |████████████████████████████████| 54 kB 2.7 MB/s \n","\u001b[K     |████████████████████████████████| 63 kB 1.5 MB/s \n","\u001b[K     |████████████████████████████████| 78 kB 6.7 MB/s \n","\u001b[K     |████████████████████████████████| 1.7 MB 36.6 MB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","\u001b[K     |████████████████████████████████| 1.7 MB 48.7 MB/s \n","\u001b[K     |████████████████████████████████| 1.1 MB 43.9 MB/s \n","\u001b[?25h  Building wheel for htmlmin (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for imagehash (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for databricks-cli (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pyLDAvis (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for umap-learn (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pynndescent (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","xarray-einstats 0.2.2 requires numpy>=1.21, but you have numpy 1.19.5 which is incompatible.\n","tensorflow 2.8.2+zzzcolab20220527125636 requires numpy>=1.20, but you have numpy 1.19.5 which is incompatible.\n","google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.27.1 which is incompatible.\n","datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\n","albumentations 0.1.12 requires imgaug<0.2.7,>=0.2.5, but you have imgaug 0.2.9 which is incompatible.\u001b[0m\n"]}],"source":["!pip install pycaret==2.3.10 markupsafe==2.0.1 pyyaml==5.4.1 -qq"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3377,"status":"ok","timestamp":1654194293081,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"TA9o4Sc6Qc6I","outputId":"30d1f2da-288e-4805-f728-cdbe19497644"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/distributed/config.py:20: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\n","  defaults = yaml.load(f)\n"]}],"source":["import pandas as pd\n","from pycaret.classification import *\n","from tqdm import tqdm"]},{"cell_type":"code","source":["from google.colab import drive\n","\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pbmv4QPG2mlV","executionInfo":{"status":"ok","timestamp":1654194320620,"user_tz":180,"elapsed":27546,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"12de218e-ec38-42c1-93c7-1bdeffc309c8"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"EzuQlWAIdlLY"},"source":["# Preparação"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":1531,"status":"ok","timestamp":1654194322143,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"SmglVpXXQx7w"},"outputs":[],"source":["df_train_values = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/train_values.csv\")"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":551,"status":"ok","timestamp":1654194322691,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"-owqop2mQ46i"},"outputs":[],"source":["df_train__label_values = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/train_labels.csv\")"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1654194322692,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"71GSlzD9Q7cY","outputId":"59cc9276-a4e5-497f-c1da-69978039b30e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   building_id  geo_level_1_id  geo_level_2_id  geo_level_3_id  \\\n","0       802906               6             487           12198   \n","1        28830               8             900            2812   \n","2        94947              21             363            8973   \n","3       590882              22             418           10694   \n","4       201944              11             131            1488   \n","\n","   count_floors_pre_eq  age  area_percentage  height_percentage  \\\n","0                    2   30                6                  5   \n","1                    2   10                8                  7   \n","2                    2   10                5                  5   \n","3                    2   10                6                  5   \n","4                    3   30                8                  9   \n","\n","  land_surface_condition foundation_type roof_type ground_floor_type  \\\n","0                      t               r         n                 f   \n","1                      o               r         n                 x   \n","2                      t               r         n                 f   \n","3                      t               r         n                 f   \n","4                      t               r         n                 f   \n","\n","  other_floor_type position plan_configuration  has_superstructure_adobe_mud  \\\n","0                q        t                  d                             1   \n","1                q        s                  d                             0   \n","2                x        t                  d                             0   \n","3                x        s                  d                             0   \n","4                x        s                  d                             1   \n","\n","   has_superstructure_mud_mortar_stone  has_superstructure_stone_flag  \\\n","0                                    1                              0   \n","1                                    1                              0   \n","2                                    1                              0   \n","3                                    1                              0   \n","4                                    0                              0   \n","\n","   has_superstructure_cement_mortar_stone  \\\n","0                                       0   \n","1                                       0   \n","2                                       0   \n","3                                       0   \n","4                                       0   \n","\n","   has_superstructure_mud_mortar_brick  \\\n","0                                    0   \n","1                                    0   \n","2                                    0   \n","3                                    0   \n","4                                    0   \n","\n","   has_superstructure_cement_mortar_brick  has_superstructure_timber  \\\n","0                                       0                          0   \n","1                                       0                          0   \n","2                                       0                          0   \n","3                                       0                          1   \n","4                                       0                          0   \n","\n","   has_superstructure_bamboo  has_superstructure_rc_non_engineered  \\\n","0                          0                                     0   \n","1                          0                                     0   \n","2                          0                                     0   \n","3                          1                                     0   \n","4                          0                                     0   \n","\n","   has_superstructure_rc_engineered  has_superstructure_other  \\\n","0                                 0                         0   \n","1                                 0                         0   \n","2                                 0                         0   \n","3                                 0                         0   \n","4                                 0                         0   \n","\n","  legal_ownership_status  count_families  has_secondary_use  \\\n","0                      v               1                  0   \n","1                      v               1                  0   \n","2                      v               1                  0   \n","3                      v               1                  0   \n","4                      v               1                  0   \n","\n","   has_secondary_use_agriculture  has_secondary_use_hotel  \\\n","0                              0                        0   \n","1                              0                        0   \n","2                              0                        0   \n","3                              0                        0   \n","4                              0                        0   \n","\n","   has_secondary_use_rental  has_secondary_use_institution  \\\n","0                         0                              0   \n","1                         0                              0   \n","2                         0                              0   \n","3                         0                              0   \n","4                         0                              0   \n","\n","   has_secondary_use_school  has_secondary_use_industry  \\\n","0                         0                           0   \n","1                         0                           0   \n","2                         0                           0   \n","3                         0                           0   \n","4                         0                           0   \n","\n","   has_secondary_use_health_post  has_secondary_use_gov_office  \\\n","0                              0                             0   \n","1                              0                             0   \n","2                              0                             0   \n","3                              0                             0   \n","4                              0                             0   \n","\n","   has_secondary_use_use_police  has_secondary_use_other  \n","0                             0                        0  \n","1                             0                        0  \n","2                             0                        0  \n","3                             0                        0  \n","4                             0                        0  "],"text/html":["\n","  <div id=\"df-ed03b342-c857-4dec-8a7f-3ba65d361693\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_id</th>\n","      <th>geo_level_1_id</th>\n","      <th>geo_level_2_id</th>\n","      <th>geo_level_3_id</th>\n","      <th>count_floors_pre_eq</th>\n","      <th>age</th>\n","      <th>area_percentage</th>\n","      <th>height_percentage</th>\n","      <th>land_surface_condition</th>\n","      <th>foundation_type</th>\n","      <th>roof_type</th>\n","      <th>ground_floor_type</th>\n","      <th>other_floor_type</th>\n","      <th>position</th>\n","      <th>plan_configuration</th>\n","      <th>has_superstructure_adobe_mud</th>\n","      <th>has_superstructure_mud_mortar_stone</th>\n","      <th>has_superstructure_stone_flag</th>\n","      <th>has_superstructure_cement_mortar_stone</th>\n","      <th>has_superstructure_mud_mortar_brick</th>\n","      <th>has_superstructure_cement_mortar_brick</th>\n","      <th>has_superstructure_timber</th>\n","      <th>has_superstructure_bamboo</th>\n","      <th>has_superstructure_rc_non_engineered</th>\n","      <th>has_superstructure_rc_engineered</th>\n","      <th>has_superstructure_other</th>\n","      <th>legal_ownership_status</th>\n","      <th>count_families</th>\n","      <th>has_secondary_use</th>\n","      <th>has_secondary_use_agriculture</th>\n","      <th>has_secondary_use_hotel</th>\n","      <th>has_secondary_use_rental</th>\n","      <th>has_secondary_use_institution</th>\n","      <th>has_secondary_use_school</th>\n","      <th>has_secondary_use_industry</th>\n","      <th>has_secondary_use_health_post</th>\n","      <th>has_secondary_use_gov_office</th>\n","      <th>has_secondary_use_use_police</th>\n","      <th>has_secondary_use_other</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>802906</td>\n","      <td>6</td>\n","      <td>487</td>\n","      <td>12198</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>q</td>\n","      <td>t</td>\n","      <td>d</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>28830</td>\n","      <td>8</td>\n","      <td>900</td>\n","      <td>2812</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>o</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>x</td>\n","      <td>q</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94947</td>\n","      <td>21</td>\n","      <td>363</td>\n","      <td>8973</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>x</td>\n","      <td>t</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>590882</td>\n","      <td>22</td>\n","      <td>418</td>\n","      <td>10694</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>x</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>201944</td>\n","      <td>11</td>\n","      <td>131</td>\n","      <td>1488</td>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>x</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed03b342-c857-4dec-8a7f-3ba65d361693')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ed03b342-c857-4dec-8a7f-3ba65d361693 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ed03b342-c857-4dec-8a7f-3ba65d361693');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}],"source":["df_train_values.head()"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1654194322694,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"nuqKEYpoQ-A-","outputId":"07d7110e-bbc2-40c7-da63-b9dc5db40e39"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   building_id  damage_grade\n","0       802906             3\n","1        28830             2\n","2        94947             3\n","3       590882             2\n","4       201944             3"],"text/html":["\n","  <div id=\"df-86a1599c-b440-4314-bb3d-dcdbbdc9879e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_id</th>\n","      <th>damage_grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>802906</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>28830</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94947</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>590882</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>201944</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86a1599c-b440-4314-bb3d-dcdbbdc9879e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-86a1599c-b440-4314-bb3d-dcdbbdc9879e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-86a1599c-b440-4314-bb3d-dcdbbdc9879e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}],"source":["df_train__label_values.head()"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1654194322695,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"U7mZTZ7_Q_5u","outputId":"37304533-22f6-4dde-955c-a52db9b694cc"},"outputs":[{"output_type":"stream","name":"stdout","text":["(260601, 39)\n","(260601, 2)\n"]}],"source":["print(df_train_values.shape)\n","print(df_train__label_values.shape)"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":288,"status":"ok","timestamp":1654194322969,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"gHl8gsL0RBqS"},"outputs":[],"source":["df_train = pd.merge(df_train_values,df_train__label_values,how='inner',on='building_id')"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1654194322969,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"kGjxs-YNRDUq","outputId":"7664ed9d-f3d3-4ccb-e194-6076b26eb0ff"},"outputs":[{"output_type":"stream","name":"stdout","text":["(260601, 39)\n","(260601, 2)\n","(260601, 40)\n"]}],"source":["print(df_train_values.shape)\n","print(df_train__label_values.shape)\n","print(df_train.shape)"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1654194322970,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"wiIxHVBEREho","outputId":"c1aa58a3-f902-4da9-fa5b-d9b05ef815ff"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["2    148259\n","3     87218\n","1     25124\n","Name: damage_grade, dtype: int64"]},"metadata":{},"execution_count":11}],"source":["df_train.damage_grade.value_counts()"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":7,"status":"ok","timestamp":1654194322970,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"XUiEdyyDRIzb"},"outputs":[],"source":["target = []\n","\n","for n in df_train.damage_grade:\n","    if n == 1:\n","        target.append(0)\n","    elif n == 2:\n","        target.append(1)\n","    elif n == 3:\n","        target.append(2)"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1654194322971,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"akbaNL-ZRLBG"},"outputs":[],"source":["df_train[\"damage_grade\"] = target"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1654194322971,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"4y8zYaYYRNEt","outputId":"2ce7ffe7-0560-4298-d1bf-944d93dff519"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    148259\n","2     87218\n","0     25124\n","Name: damage_grade, dtype: int64"]},"metadata":{},"execution_count":14}],"source":["df_train.damage_grade.value_counts()"]},{"cell_type":"markdown","metadata":{"id":"TDKD1ZGsRaHt"},"source":["# Treinamento 1 - Soft"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["6d099923de504c44b4716acb7857f1fb","2768386095cb41de8b7ccdcba3d4db1f","cff29f793e0049b7a4b1f1de845fa15a"]},"executionInfo":{"elapsed":43167,"status":"ok","timestamp":1654089145079,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"dqCvkq48RX4a","outputId":"b77b5c7a-f824-4c99-976d-ac9919ba2de2"},"outputs":[{"output_type":"display_data","data":{"text/plain":["                               Description             Value\n","0                               session_id               786\n","1                                   Target      damage_grade\n","2                              Target Type        Multiclass\n","3                            Label Encoded              None\n","4                            Original Data      (260601, 40)\n","5                           Missing Values             False\n","6                         Numeric Features                 7\n","7                     Categorical Features                32\n","8                         Ordinal Features             False\n","9                High Cardinality Features             False\n","10                 High Cardinality Method              None\n","11                   Transformed Train Set      (182420, 86)\n","12                    Transformed Test Set       (78181, 86)\n","13                      Shuffle Train-Test              True\n","14                     Stratify Train-Test             False\n","15                          Fold Generator   StratifiedKFold\n","16                             Fold Number                10\n","17                                CPU Jobs                -1\n","18                                 Use GPU              True\n","19                          Log Experiment             False\n","20                         Experiment Name  clf-default-name\n","21                                     USI              2fe2\n","22                         Imputation Type            simple\n","23          Iterative Imputation Iteration              None\n","24                         Numeric Imputer              mean\n","25      Iterative Imputation Numeric Model              None\n","26                     Categorical Imputer          constant\n","27  Iterative Imputation Categorical Model              None\n","28           Unknown Categoricals Handling    least_frequent\n","29                               Normalize             False\n","30                        Normalize Method              None\n","31                          Transformation             False\n","32                   Transformation Method              None\n","33                                     PCA             False\n","34                              PCA Method              None\n","35                          PCA Components              None\n","36                     Ignore Low Variance             False\n","37                     Combine Rare Levels             False\n","38                    Rare Level Threshold              None\n","39                         Numeric Binning             False\n","40                         Remove Outliers             False\n","41                      Outliers Threshold              None\n","42                Remove Multicollinearity             False\n","43             Multicollinearity Threshold              None\n","44             Remove Perfect Collinearity              True\n","45                              Clustering             False\n","46                    Clustering Iteration              None\n","47                     Polynomial Features             False\n","48                       Polynomial Degree              None\n","49                    Trignometry Features             False\n","50                    Polynomial Threshold              None\n","51                          Group Features             False\n","52                       Feature Selection             False\n","53                Feature Selection Method           classic\n","54            Features Selection Threshold              None\n","55                     Feature Interaction             False\n","56                           Feature Ratio             False\n","57                   Interaction Threshold              None\n","58                           Fix Imbalance             False\n","59                    Fix Imbalance Method             SMOTE"],"text/html":["\n","  <div id=\"df-61ba62a7-5f61-480c-8e4c-dd822713c9a5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Description</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>session_id</td>\n","      <td>786</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Target</td>\n","      <td>damage_grade</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Target Type</td>\n","      <td>Multiclass</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Label Encoded</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Original Data</td>\n","      <td>(260601, 40)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Missing Values</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Numeric Features</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Categorical Features</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Ordinal Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>High Cardinality Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>High Cardinality Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Transformed Train Set</td>\n","      <td>(182420, 86)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Transformed Test Set</td>\n","      <td>(78181, 86)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Shuffle Train-Test</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Stratify Train-Test</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Fold Generator</td>\n","      <td>StratifiedKFold</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Fold Number</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>CPU Jobs</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Use GPU</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Log Experiment</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Experiment Name</td>\n","      <td>clf-default-name</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>USI</td>\n","      <td>2fe2</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Imputation Type</td>\n","      <td>simple</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Iterative Imputation Iteration</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Numeric Imputer</td>\n","      <td>mean</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Iterative Imputation Numeric Model</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Categorical Imputer</td>\n","      <td>constant</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Iterative Imputation Categorical Model</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Unknown Categoricals Handling</td>\n","      <td>least_frequent</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Normalize</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Normalize Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Transformation</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Transformation Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>PCA</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>PCA Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>PCA Components</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>Ignore Low Variance</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Combine Rare Levels</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>Rare Level Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Numeric Binning</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Remove Outliers</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>Outliers Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>Remove Multicollinearity</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Multicollinearity Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Remove Perfect Collinearity</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>Clustering</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>Clustering Iteration</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>Polynomial Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Polynomial Degree</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Trignometry Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Polynomial Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Group Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Feature Selection</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Feature Selection Method</td>\n","      <td>classic</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>Features Selection Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Feature Interaction</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Feature Ratio</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>Interaction Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>Fix Imbalance</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>Fix Imbalance Method</td>\n","      <td>SMOTE</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61ba62a7-5f61-480c-8e4c-dd822713c9a5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-61ba62a7-5f61-480c-8e4c-dd822713c9a5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-61ba62a7-5f61-480c-8e4c-dd822713c9a5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}],"source":["clf1 = setup(data = df_train, target = 'damage_grade', session_id = 786, silent = True, use_gpu=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523,"referenced_widgets":["aab6a30731294427a554c19ca62b9ffe","bb71c0b68dce4dd0b667d8a236a72031","89b676b046b5410797a52bd040723077"]},"executionInfo":{"elapsed":4770849,"status":"ok","timestamp":1654052103108,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"},"user_tz":180},"id":"q430T9qpRbcg","outputId":"df64ced2-5286-49ea-fa72-589310463b97"},"outputs":[{"output_type":"display_data","data":{"text/plain":["                                    Model  Accuracy     AUC  Recall   Prec.  \\\n","lightgbm  Light Gradient Boosting Machine    0.7104  0.8043  0.6095  0.7115   \n","rf               Random Forest Classifier    0.7087  0.8028  0.6146  0.7079   \n","et                 Extra Trees Classifier    0.6895  0.7810  0.6047  0.6857   \n","gbc          Gradient Boosting Classifier    0.6814  0.7715  0.5662  0.6858   \n","ada                  Ada Boost Classifier    0.6470  0.6698  0.5197  0.6615   \n","dt               Decision Tree Classifier    0.6409  0.6727  0.5919  0.6424   \n","ridge                    Ridge Classifier    0.5924  0.0000  0.4329  0.5851   \n","lda          Linear Discriminant Analysis    0.5897  0.6568  0.5123  0.5803   \n","lr                    Logistic Regression    0.5681  0.4974  0.3333  0.3227   \n","dummy                    Dummy Classifier    0.5681  0.5000  0.3333  0.3227   \n","nb                            Naive Bayes    0.5654  0.5773  0.3343  0.3368   \n","qda       Quadratic Discriminant Analysis    0.5386  0.5068  0.3476  0.4713   \n","knn                K Neighbors Classifier    0.4933  0.5035  0.3357  0.4465   \n","svm                   SVM - Linear Kernel    0.3771  0.0000  0.3337  0.3774   \n","\n","              F1   Kappa     MCC  TT (Sec)  \n","lightgbm  0.7004  0.4429  0.4540     6.574  \n","rf        0.7001  0.4438  0.4525    52.433  \n","et        0.6829  0.4149  0.4196    70.293  \n","gbc       0.6643  0.3737  0.3934   182.489  \n","ada       0.6147  0.2869  0.3220    14.069  \n","dt        0.6416  0.3571  0.3572     4.267  \n","ridge     0.5332  0.1420  0.1764     0.417  \n","lda       0.5504  0.1913  0.2126     4.179  \n","lr        0.4116  0.0000  0.0000    16.572  \n","dummy     0.4116  0.0000  0.0000     0.109  \n","nb        0.4122  0.0004  0.0020     0.385  \n","qda       0.4527  0.0187  0.0243     2.331  \n","knn       0.4591  0.0020  0.0021     9.412  \n","svm       0.2374 -0.0003  0.0044   112.404  "],"text/html":["\n","  <div id=\"df-4da25282-d695-4e90-8193-5e23be678f03\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Accuracy</th>\n","      <th>AUC</th>\n","      <th>Recall</th>\n","      <th>Prec.</th>\n","      <th>F1</th>\n","      <th>Kappa</th>\n","      <th>MCC</th>\n","      <th>TT (Sec)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>lightgbm</th>\n","      <td>Light Gradient Boosting Machine</td>\n","      <td>0.7104</td>\n","      <td>0.8043</td>\n","      <td>0.6095</td>\n","      <td>0.7115</td>\n","      <td>0.7004</td>\n","      <td>0.4429</td>\n","      <td>0.4540</td>\n","      <td>6.574</td>\n","    </tr>\n","    <tr>\n","      <th>rf</th>\n","      <td>Random Forest Classifier</td>\n","      <td>0.7087</td>\n","      <td>0.8028</td>\n","      <td>0.6146</td>\n","      <td>0.7079</td>\n","      <td>0.7001</td>\n","      <td>0.4438</td>\n","      <td>0.4525</td>\n","      <td>52.433</td>\n","    </tr>\n","    <tr>\n","      <th>et</th>\n","      <td>Extra Trees Classifier</td>\n","      <td>0.6895</td>\n","      <td>0.7810</td>\n","      <td>0.6047</td>\n","      <td>0.6857</td>\n","      <td>0.6829</td>\n","      <td>0.4149</td>\n","      <td>0.4196</td>\n","      <td>70.293</td>\n","    </tr>\n","    <tr>\n","      <th>gbc</th>\n","      <td>Gradient Boosting Classifier</td>\n","      <td>0.6814</td>\n","      <td>0.7715</td>\n","      <td>0.5662</td>\n","      <td>0.6858</td>\n","      <td>0.6643</td>\n","      <td>0.3737</td>\n","      <td>0.3934</td>\n","      <td>182.489</td>\n","    </tr>\n","    <tr>\n","      <th>ada</th>\n","      <td>Ada Boost Classifier</td>\n","      <td>0.6470</td>\n","      <td>0.6698</td>\n","      <td>0.5197</td>\n","      <td>0.6615</td>\n","      <td>0.6147</td>\n","      <td>0.2869</td>\n","      <td>0.3220</td>\n","      <td>14.069</td>\n","    </tr>\n","    <tr>\n","      <th>dt</th>\n","      <td>Decision Tree Classifier</td>\n","      <td>0.6409</td>\n","      <td>0.6727</td>\n","      <td>0.5919</td>\n","      <td>0.6424</td>\n","      <td>0.6416</td>\n","      <td>0.3571</td>\n","      <td>0.3572</td>\n","      <td>4.267</td>\n","    </tr>\n","    <tr>\n","      <th>ridge</th>\n","      <td>Ridge Classifier</td>\n","      <td>0.5924</td>\n","      <td>0.0000</td>\n","      <td>0.4329</td>\n","      <td>0.5851</td>\n","      <td>0.5332</td>\n","      <td>0.1420</td>\n","      <td>0.1764</td>\n","      <td>0.417</td>\n","    </tr>\n","    <tr>\n","      <th>lda</th>\n","      <td>Linear Discriminant Analysis</td>\n","      <td>0.5897</td>\n","      <td>0.6568</td>\n","      <td>0.5123</td>\n","      <td>0.5803</td>\n","      <td>0.5504</td>\n","      <td>0.1913</td>\n","      <td>0.2126</td>\n","      <td>4.179</td>\n","    </tr>\n","    <tr>\n","      <th>lr</th>\n","      <td>Logistic Regression</td>\n","      <td>0.5681</td>\n","      <td>0.4974</td>\n","      <td>0.3333</td>\n","      <td>0.3227</td>\n","      <td>0.4116</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>16.572</td>\n","    </tr>\n","    <tr>\n","      <th>dummy</th>\n","      <td>Dummy Classifier</td>\n","      <td>0.5681</td>\n","      <td>0.5000</td>\n","      <td>0.3333</td>\n","      <td>0.3227</td>\n","      <td>0.4116</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.109</td>\n","    </tr>\n","    <tr>\n","      <th>nb</th>\n","      <td>Naive Bayes</td>\n","      <td>0.5654</td>\n","      <td>0.5773</td>\n","      <td>0.3343</td>\n","      <td>0.3368</td>\n","      <td>0.4122</td>\n","      <td>0.0004</td>\n","      <td>0.0020</td>\n","      <td>0.385</td>\n","    </tr>\n","    <tr>\n","      <th>qda</th>\n","      <td>Quadratic Discriminant Analysis</td>\n","      <td>0.5386</td>\n","      <td>0.5068</td>\n","      <td>0.3476</td>\n","      <td>0.4713</td>\n","      <td>0.4527</td>\n","      <td>0.0187</td>\n","      <td>0.0243</td>\n","      <td>2.331</td>\n","    </tr>\n","    <tr>\n","      <th>knn</th>\n","      <td>K Neighbors Classifier</td>\n","      <td>0.4933</td>\n","      <td>0.5035</td>\n","      <td>0.3357</td>\n","      <td>0.4465</td>\n","      <td>0.4591</td>\n","      <td>0.0020</td>\n","      <td>0.0021</td>\n","      <td>9.412</td>\n","    </tr>\n","    <tr>\n","      <th>svm</th>\n","      <td>SVM - Linear Kernel</td>\n","      <td>0.3771</td>\n","      <td>0.0000</td>\n","      <td>0.3337</td>\n","      <td>0.3774</td>\n","      <td>0.2374</td>\n","      <td>-0.0003</td>\n","      <td>0.0044</td>\n","      <td>112.404</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4da25282-d695-4e90-8193-5e23be678f03')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4da25282-d695-4e90-8193-5e23be678f03 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4da25282-d695-4e90-8193-5e23be678f03');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 1h 15min 46s, sys: 2min 53s, total: 1h 18min 40s\n","Wall time: 1h 19min 30s\n"]}],"source":["%%time\n","best_model = compare_models()"]},{"cell_type":"code","source":["Ensemble_Model = blend_models(compare_models(n_select = 5), method = 'soft')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457,"referenced_widgets":["1f3872d231b2493f873bc3bb62445c1a","2274ed34f62d4e63b9e5ab0a763f79a1","a8eee97b616943ee859bdd0402249746","b56c2d21ccde4b4b800295a39711d657","68f20b9bc2c14acd87c69dc94a856e92","304ea2211cfa410aaf35014c9872c8ab"]},"id":"Edh5hjV73fI0","executionInfo":{"status":"ok","timestamp":1654060426756,"user_tz":180,"elapsed":8323660,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"6c5f49d7-627c-47b1-a833-4430228ba938"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["      Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC\n","Fold                                                          \n","0       0.7100  0.8110  0.6086  0.7117  0.6994  0.4407  0.4528\n","1       0.7187  0.8143  0.6167  0.7229  0.7077  0.4554  0.4695\n","2       0.7157  0.8088  0.6104  0.7189  0.7045  0.4500  0.4639\n","3       0.7180  0.8142  0.6095  0.7200  0.7073  0.4556  0.4679\n","4       0.7158  0.8123  0.6062  0.7175  0.7049  0.4513  0.4638\n","5       0.7151  0.8104  0.6113  0.7178  0.7043  0.4499  0.4632\n","6       0.7098  0.8089  0.6033  0.7113  0.6989  0.4398  0.4523\n","7       0.7176  0.8135  0.6145  0.7199  0.7073  0.4556  0.4679\n","8       0.7193  0.8155  0.6157  0.7225  0.7088  0.4581  0.4713\n","9       0.7151  0.8123  0.6085  0.7180  0.7040  0.4489  0.4622\n","Mean    0.7155  0.8121  0.6105  0.7181  0.7047  0.4505  0.4635\n","Std     0.0032  0.0022  0.0040  0.0037  0.0032  0.0059  0.0061"],"text/html":["\n","  <div id=\"df-4782cbb2-223c-403b-8fa0-ab549cbb4853\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Accuracy</th>\n","      <th>AUC</th>\n","      <th>Recall</th>\n","      <th>Prec.</th>\n","      <th>F1</th>\n","      <th>Kappa</th>\n","      <th>MCC</th>\n","    </tr>\n","    <tr>\n","      <th>Fold</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.7100</td>\n","      <td>0.8110</td>\n","      <td>0.6086</td>\n","      <td>0.7117</td>\n","      <td>0.6994</td>\n","      <td>0.4407</td>\n","      <td>0.4528</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.7187</td>\n","      <td>0.8143</td>\n","      <td>0.6167</td>\n","      <td>0.7229</td>\n","      <td>0.7077</td>\n","      <td>0.4554</td>\n","      <td>0.4695</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.7157</td>\n","      <td>0.8088</td>\n","      <td>0.6104</td>\n","      <td>0.7189</td>\n","      <td>0.7045</td>\n","      <td>0.4500</td>\n","      <td>0.4639</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.7180</td>\n","      <td>0.8142</td>\n","      <td>0.6095</td>\n","      <td>0.7200</td>\n","      <td>0.7073</td>\n","      <td>0.4556</td>\n","      <td>0.4679</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.7158</td>\n","      <td>0.8123</td>\n","      <td>0.6062</td>\n","      <td>0.7175</td>\n","      <td>0.7049</td>\n","      <td>0.4513</td>\n","      <td>0.4638</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.7151</td>\n","      <td>0.8104</td>\n","      <td>0.6113</td>\n","      <td>0.7178</td>\n","      <td>0.7043</td>\n","      <td>0.4499</td>\n","      <td>0.4632</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.7098</td>\n","      <td>0.8089</td>\n","      <td>0.6033</td>\n","      <td>0.7113</td>\n","      <td>0.6989</td>\n","      <td>0.4398</td>\n","      <td>0.4523</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.7176</td>\n","      <td>0.8135</td>\n","      <td>0.6145</td>\n","      <td>0.7199</td>\n","      <td>0.7073</td>\n","      <td>0.4556</td>\n","      <td>0.4679</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.7193</td>\n","      <td>0.8155</td>\n","      <td>0.6157</td>\n","      <td>0.7225</td>\n","      <td>0.7088</td>\n","      <td>0.4581</td>\n","      <td>0.4713</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.7151</td>\n","      <td>0.8123</td>\n","      <td>0.6085</td>\n","      <td>0.7180</td>\n","      <td>0.7040</td>\n","      <td>0.4489</td>\n","      <td>0.4622</td>\n","    </tr>\n","    <tr>\n","      <th>Mean</th>\n","      <td>0.7155</td>\n","      <td>0.8121</td>\n","      <td>0.6105</td>\n","      <td>0.7181</td>\n","      <td>0.7047</td>\n","      <td>0.4505</td>\n","      <td>0.4635</td>\n","    </tr>\n","    <tr>\n","      <th>Std</th>\n","      <td>0.0032</td>\n","      <td>0.0022</td>\n","      <td>0.0040</td>\n","      <td>0.0037</td>\n","      <td>0.0032</td>\n","      <td>0.0059</td>\n","      <td>0.0061</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4782cbb2-223c-403b-8fa0-ab549cbb4853')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4782cbb2-223c-403b-8fa0-ab549cbb4853 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4782cbb2-223c-403b-8fa0-ab549cbb4853');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KPJyYzIJSdPm"},"outputs":[],"source":["df_test_values = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/test_values.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NVNoVDDXTCNC","executionInfo":{"status":"ok","timestamp":1654060463822,"user_tz":180,"elapsed":36618,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"26eb93d7-e9b4-439a-df50-4fb554d4e740"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    59914\n","2    21746\n","0     5208\n","Name: Label, dtype: int64"]},"metadata":{},"execution_count":19}],"source":["predict_model(Ensemble_Model, data=df_test_values).Label.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i8PTouBzTFZp","executionInfo":{"status":"ok","timestamp":1654060463823,"user_tz":180,"elapsed":14,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"362ed828-4fdd-4672-a438-b2642988c8d6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["VotingClassifier(estimators=[('lightgbm',\n","                              LGBMClassifier(boosting_type='gbdt',\n","                                             class_weight=None,\n","                                             colsample_bytree=1.0,\n","                                             importance_type='split',\n","                                             learning_rate=0.1, max_depth=-1,\n","                                             min_child_samples=20,\n","                                             min_child_weight=0.001,\n","                                             min_split_gain=0.0,\n","                                             n_estimators=100, n_jobs=-1,\n","                                             num_leaves=31, objective=None,\n","                                             random_state=786, reg_alpha=0.0,\n","                                             reg_lambda=0.0, silent='warn',...\n","                                                         min_weight_fraction_leaf=0.0,\n","                                                         n_estimators=100,\n","                                                         n_iter_no_change=None,\n","                                                         presort='deprecated',\n","                                                         random_state=786,\n","                                                         subsample=1.0,\n","                                                         tol=0.0001,\n","                                                         validation_fraction=0.1,\n","                                                         verbose=0,\n","                                                         warm_start=False)),\n","                             ('ada',\n","                              AdaBoostClassifier(algorithm='SAMME.R',\n","                                                 base_estimator=None,\n","                                                 learning_rate=1.0,\n","                                                 n_estimators=50,\n","                                                 random_state=786))],\n","                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',\n","                 weights=None)"]},"metadata":{},"execution_count":20}],"source":["Ensemble_Model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6NNwiHNHTIRI"},"outputs":[],"source":["plot_model(Ensemble_Model, plot = 'confusion_matrix')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EaZFD8Ok3IQK"},"outputs":[],"source":["plot_model(Ensemble_Model, plot = 'feature_all')"]},{"cell_type":"code","source":["plot_model(Ensemble_Model, plot = 'auc')"],"metadata":{"id":"Uv0oWV0pFGBZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EwLE8ffm3mw0"},"outputs":[],"source":["plot_model(Ensemble_Model, plot = 'parameter')"]},{"cell_type":"code","source":["plot_model(Ensemble_Model, plot = 'error')"],"metadata":{"id":"suMZP8qDt8a3"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HDtDpTO3TK6Q"},"outputs":[],"source":["plot_model(Ensemble_Model, plot='boundary')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PwiFUHEzTaU-"},"outputs":[],"source":["final_knn = finalize_model(Ensemble_Model)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y18wtc8mTb41","executionInfo":{"status":"ok","timestamp":1654065836082,"user_tz":180,"elapsed":18377,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"ce6d0f68-cee8-4465-dadf-717b0ce95a64"},"outputs":[{"output_type":"stream","name":"stdout","text":["Transformation Pipeline and Model Successfully Saved\n"]},{"output_type":"execute_result","data":{"text/plain":["(Pipeline(memory=None,\n","          steps=[('dtypes',\n","                  DataTypes_Auto_infer(categorical_features=[],\n","                                       display_types=False, features_todrop=[],\n","                                       id_columns=[],\n","                                       ml_usecase='classification',\n","                                       numerical_features=[],\n","                                       target='damage_grade',\n","                                       time_features=[])),\n","                 ('imputer',\n","                  Simple_Imputer(categorical_strategy='not_available',\n","                                 fill_value_categorical=None,\n","                                 fill_value_numerical=None,\n","                                 numeri...\n","                                                                           n_estimators=100,\n","                                                                           n_iter_no_change=None,\n","                                                                           presort='deprecated',\n","                                                                           random_state=786,\n","                                                                           subsample=1.0,\n","                                                                           tol=0.0001,\n","                                                                           validation_fraction=0.1,\n","                                                                           verbose=0,\n","                                                                           warm_start=False)),\n","                                               ('ada',\n","                                                AdaBoostClassifier(algorithm='SAMME.R',\n","                                                                   base_estimator=None,\n","                                                                   learning_rate=1.0,\n","                                                                   n_estimators=50,\n","                                                                   random_state=786))],\n","                                   flatten_transform=True, n_jobs=1,\n","                                   verbose=False, voting='soft',\n","                                   weights=None)]],\n","          verbose=False),\n"," \"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/Ensemble_Model_Soft.pkl\")"]},"metadata":{},"execution_count":22}],"source":["save_model(final_knn,\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/Ensemble_Model_Soft\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uDHNC7-HTd1T","executionInfo":{"status":"ok","timestamp":1654079669665,"user_tz":180,"elapsed":32513,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"ef026a62-5a1e-4a20-8bb6-175f714b9d08"},"outputs":[{"output_type":"stream","name":"stdout","text":["Transformation Pipeline and Model Successfully Loaded\n"]}],"source":["saved_final_knn = load_model(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/Ensemble_Model_Soft\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"txQPfE6qTfc_"},"outputs":[],"source":["predictions = predict_model(saved_final_knn, data=df_test_values)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"Hqls0pygTg1_","executionInfo":{"status":"ok","timestamp":1654079704042,"user_tz":180,"elapsed":13,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"fb941a87-4785-408e-e99e-81a46a1fffb2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   building_id  geo_level_1_id  geo_level_2_id  geo_level_3_id  \\\n","0       300051              17             596           11307   \n","1        99355               6             141           11987   \n","2       890251              22              19           10044   \n","3       745817              26              39             633   \n","4       421793              17             289            7970   \n","\n","   count_floors_pre_eq  age  area_percentage  height_percentage  \\\n","0                    3   20                7                  6   \n","1                    2   25               13                  5   \n","2                    2    5                4                  5   \n","3                    1    0               19                  3   \n","4                    3   15                8                  7   \n","\n","  land_surface_condition foundation_type roof_type ground_floor_type  \\\n","0                      t               r         n                 f   \n","1                      t               r         n                 f   \n","2                      t               r         n                 f   \n","3                      t               r         x                 v   \n","4                      t               r         q                 f   \n","\n","  other_floor_type position plan_configuration  has_superstructure_adobe_mud  \\\n","0                q        s                  d                             0   \n","1                q        s                  d                             0   \n","2                q        s                  d                             0   \n","3                j        t                  d                             0   \n","4                q        t                  d                             0   \n","\n","   has_superstructure_mud_mortar_stone  has_superstructure_stone_flag  \\\n","0                                    1                              0   \n","1                                    1                              0   \n","2                                    1                              0   \n","3                                    0                              0   \n","4                                    1                              0   \n","\n","   has_superstructure_cement_mortar_stone  \\\n","0                                       0   \n","1                                       0   \n","2                                       0   \n","3                                       0   \n","4                                       0   \n","\n","   has_superstructure_mud_mortar_brick  \\\n","0                                    0   \n","1                                    0   \n","2                                    0   \n","3                                    0   \n","4                                    0   \n","\n","   has_superstructure_cement_mortar_brick  has_superstructure_timber  \\\n","0                                       0                          0   \n","1                                       0                          0   \n","2                                       0                          0   \n","3                                       1                          0   \n","4                                       0                          0   \n","\n","   has_superstructure_bamboo  has_superstructure_rc_non_engineered  \\\n","0                          0                                     0   \n","1                          0                                     0   \n","2                          0                                     0   \n","3                          0                                     0   \n","4                          0                                     0   \n","\n","   has_superstructure_rc_engineered  has_superstructure_other  \\\n","0                                 0                         0   \n","1                                 0                         0   \n","2                                 0                         0   \n","3                                 0                         0   \n","4                                 0                         0   \n","\n","  legal_ownership_status  count_families  has_secondary_use  \\\n","0                      v               1                  0   \n","1                      v               1                  1   \n","2                      v               1                  0   \n","3                      v               2                  1   \n","4                      v               1                  0   \n","\n","   has_secondary_use_agriculture  has_secondary_use_hotel  \\\n","0                              0                        0   \n","1                              1                        0   \n","2                              0                        0   \n","3                              0                        0   \n","4                              0                        0   \n","\n","   has_secondary_use_rental  has_secondary_use_institution  \\\n","0                         0                              0   \n","1                         0                              0   \n","2                         0                              0   \n","3                         1                              0   \n","4                         0                              0   \n","\n","   has_secondary_use_school  has_secondary_use_industry  \\\n","0                         0                           0   \n","1                         0                           0   \n","2                         0                           0   \n","3                         0                           0   \n","4                         0                           0   \n","\n","   has_secondary_use_health_post  has_secondary_use_gov_office  \\\n","0                              0                             0   \n","1                              0                             0   \n","2                              0                             0   \n","3                              0                             0   \n","4                              0                             0   \n","\n","   has_secondary_use_use_police  has_secondary_use_other  Label   Score  \n","0                             0                        0      2  0.6219  \n","1                             0                        0      1  0.6669  \n","2                             0                        0      1  0.6773  \n","3                             0                        0      0  0.4971  \n","4                             0                        0      2  0.7322  "],"text/html":["\n","  <div id=\"df-1099bd7c-3389-4c92-943b-960c0d7253f7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_id</th>\n","      <th>geo_level_1_id</th>\n","      <th>geo_level_2_id</th>\n","      <th>geo_level_3_id</th>\n","      <th>count_floors_pre_eq</th>\n","      <th>age</th>\n","      <th>area_percentage</th>\n","      <th>height_percentage</th>\n","      <th>land_surface_condition</th>\n","      <th>foundation_type</th>\n","      <th>roof_type</th>\n","      <th>ground_floor_type</th>\n","      <th>other_floor_type</th>\n","      <th>position</th>\n","      <th>plan_configuration</th>\n","      <th>has_superstructure_adobe_mud</th>\n","      <th>has_superstructure_mud_mortar_stone</th>\n","      <th>has_superstructure_stone_flag</th>\n","      <th>has_superstructure_cement_mortar_stone</th>\n","      <th>has_superstructure_mud_mortar_brick</th>\n","      <th>has_superstructure_cement_mortar_brick</th>\n","      <th>has_superstructure_timber</th>\n","      <th>has_superstructure_bamboo</th>\n","      <th>has_superstructure_rc_non_engineered</th>\n","      <th>has_superstructure_rc_engineered</th>\n","      <th>has_superstructure_other</th>\n","      <th>legal_ownership_status</th>\n","      <th>count_families</th>\n","      <th>has_secondary_use</th>\n","      <th>has_secondary_use_agriculture</th>\n","      <th>has_secondary_use_hotel</th>\n","      <th>has_secondary_use_rental</th>\n","      <th>has_secondary_use_institution</th>\n","      <th>has_secondary_use_school</th>\n","      <th>has_secondary_use_industry</th>\n","      <th>has_secondary_use_health_post</th>\n","      <th>has_secondary_use_gov_office</th>\n","      <th>has_secondary_use_use_police</th>\n","      <th>has_secondary_use_other</th>\n","      <th>Label</th>\n","      <th>Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>300051</td>\n","      <td>17</td>\n","      <td>596</td>\n","      <td>11307</td>\n","      <td>3</td>\n","      <td>20</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>q</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0.6219</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>99355</td>\n","      <td>6</td>\n","      <td>141</td>\n","      <td>11987</td>\n","      <td>2</td>\n","      <td>25</td>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>q</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.6669</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>890251</td>\n","      <td>22</td>\n","      <td>19</td>\n","      <td>10044</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>q</td>\n","      <td>s</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.6773</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>745817</td>\n","      <td>26</td>\n","      <td>39</td>\n","      <td>633</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>19</td>\n","      <td>3</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>x</td>\n","      <td>v</td>\n","      <td>j</td>\n","      <td>t</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.4971</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>421793</td>\n","      <td>17</td>\n","      <td>289</td>\n","      <td>7970</td>\n","      <td>3</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>t</td>\n","      <td>r</td>\n","      <td>q</td>\n","      <td>f</td>\n","      <td>q</td>\n","      <td>t</td>\n","      <td>d</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>v</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0.7322</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1099bd7c-3389-4c92-943b-960c0d7253f7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1099bd7c-3389-4c92-943b-960c0d7253f7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1099bd7c-3389-4c92-943b-960c0d7253f7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}],"source":["predictions.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"o_CO2cqNTwDt"},"outputs":[],"source":["target = []\n","\n","for n in predictions.Label:\n","    if n == 0:\n","        target.append(1)\n","    elif n == 1:\n","        target.append(2)\n","    elif n == 2:\n","        target.append(3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3UiILZyPTxw5"},"outputs":[],"source":["predictions[\"damage_grade\"] = target"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wgcf921dTzSd"},"outputs":[],"source":["predictions[[\"building_id\",\"damage_grade\"]].to_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/Ensemble.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8QCQ5TO6T4ya"},"outputs":[],"source":[""]},{"cell_type":"markdown","source":["# Treinamento 2"],"metadata":{"id":"qmlaJU686DpQ"}},{"cell_type":"code","source":["clf1 = setup(data = df_train, target = 'damage_grade', session_id = 786, silent = True)"],"metadata":{"id":"nssN0VjULaMg","colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["0fa35aa5032943ba9d7d1a91b7299b33","7ef913b5601647d296e1d57604844409","2431868e43f74d73953d55ca120f58b0"]},"executionInfo":{"status":"ok","timestamp":1654194352827,"user_tz":180,"elapsed":29863,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}},"outputId":"fca444ff-8fc6-47bf-e56f-5a95e4787540"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["                               Description             Value\n","0                               session_id               786\n","1                                   Target      damage_grade\n","2                              Target Type        Multiclass\n","3                            Label Encoded              None\n","4                            Original Data      (260601, 40)\n","5                           Missing Values             False\n","6                         Numeric Features                 7\n","7                     Categorical Features                32\n","8                         Ordinal Features             False\n","9                High Cardinality Features             False\n","10                 High Cardinality Method              None\n","11                   Transformed Train Set      (182420, 86)\n","12                    Transformed Test Set       (78181, 86)\n","13                      Shuffle Train-Test              True\n","14                     Stratify Train-Test             False\n","15                          Fold Generator   StratifiedKFold\n","16                             Fold Number                10\n","17                                CPU Jobs                -1\n","18                                 Use GPU             False\n","19                          Log Experiment             False\n","20                         Experiment Name  clf-default-name\n","21                                     USI              6baf\n","22                         Imputation Type            simple\n","23          Iterative Imputation Iteration              None\n","24                         Numeric Imputer              mean\n","25      Iterative Imputation Numeric Model              None\n","26                     Categorical Imputer          constant\n","27  Iterative Imputation Categorical Model              None\n","28           Unknown Categoricals Handling    least_frequent\n","29                               Normalize             False\n","30                        Normalize Method              None\n","31                          Transformation             False\n","32                   Transformation Method              None\n","33                                     PCA             False\n","34                              PCA Method              None\n","35                          PCA Components              None\n","36                     Ignore Low Variance             False\n","37                     Combine Rare Levels             False\n","38                    Rare Level Threshold              None\n","39                         Numeric Binning             False\n","40                         Remove Outliers             False\n","41                      Outliers Threshold              None\n","42                Remove Multicollinearity             False\n","43             Multicollinearity Threshold              None\n","44             Remove Perfect Collinearity              True\n","45                              Clustering             False\n","46                    Clustering Iteration              None\n","47                     Polynomial Features             False\n","48                       Polynomial Degree              None\n","49                    Trignometry Features             False\n","50                    Polynomial Threshold              None\n","51                          Group Features             False\n","52                       Feature Selection             False\n","53                Feature Selection Method           classic\n","54            Features Selection Threshold              None\n","55                     Feature Interaction             False\n","56                           Feature Ratio             False\n","57                   Interaction Threshold              None\n","58                           Fix Imbalance             False\n","59                    Fix Imbalance Method             SMOTE"],"text/html":["\n","  <div id=\"df-b7bf2e64-824c-46d7-88ef-3c1686edc25d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Description</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>session_id</td>\n","      <td>786</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Target</td>\n","      <td>damage_grade</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Target Type</td>\n","      <td>Multiclass</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Label Encoded</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Original Data</td>\n","      <td>(260601, 40)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Missing Values</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Numeric Features</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Categorical Features</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Ordinal Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>High Cardinality Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>High Cardinality Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Transformed Train Set</td>\n","      <td>(182420, 86)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Transformed Test Set</td>\n","      <td>(78181, 86)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Shuffle Train-Test</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Stratify Train-Test</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Fold Generator</td>\n","      <td>StratifiedKFold</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Fold Number</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>CPU Jobs</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Use GPU</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Log Experiment</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Experiment Name</td>\n","      <td>clf-default-name</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>USI</td>\n","      <td>6baf</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Imputation Type</td>\n","      <td>simple</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Iterative Imputation Iteration</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Numeric Imputer</td>\n","      <td>mean</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Iterative Imputation Numeric Model</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Categorical Imputer</td>\n","      <td>constant</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Iterative Imputation Categorical Model</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Unknown Categoricals Handling</td>\n","      <td>least_frequent</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Normalize</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Normalize Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Transformation</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Transformation Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>PCA</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>PCA Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>PCA Components</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>Ignore Low Variance</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Combine Rare Levels</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>Rare Level Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Numeric Binning</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Remove Outliers</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>Outliers Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>Remove Multicollinearity</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Multicollinearity Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Remove Perfect Collinearity</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>Clustering</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>Clustering Iteration</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>Polynomial Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Polynomial Degree</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Trignometry Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Polynomial Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Group Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Feature Selection</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Feature Selection Method</td>\n","      <td>classic</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>Features Selection Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Feature Interaction</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Feature Ratio</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>Interaction Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>Fix Imbalance</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>Fix Imbalance Method</td>\n","      <td>SMOTE</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7bf2e64-824c-46d7-88ef-3c1686edc25d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b7bf2e64-824c-46d7-88ef-3c1686edc25d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b7bf2e64-824c-46d7-88ef-3c1686edc25d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"code","source":["Ensemble_Model = blend_models(compare_models(), method = 'soft')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":783,"referenced_widgets":["fa17d20b3f494f17a7004ab84f8d1384","8d92198663274974b457e7131404c2e3","818f1947ae0149e4a72ba21d52bf4a0c"]},"id":"cbozOx0c6FYN","outputId":"67c6140d-fd78-489c-fe64-d9cd6a2a3808","executionInfo":{"status":"error","timestamp":1654198255510,"user_tz":180,"elapsed":3902689,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["                                    Model  Accuracy     AUC  Recall   Prec.  \\\n","lightgbm  Light Gradient Boosting Machine    0.7104  0.8043  0.6095  0.7115   \n","rf               Random Forest Classifier    0.7087  0.8028  0.6146  0.7079   \n","et                 Extra Trees Classifier    0.6895  0.7810  0.6047  0.6857   \n","gbc          Gradient Boosting Classifier    0.6814  0.7715  0.5662  0.6858   \n","ada                  Ada Boost Classifier    0.6470  0.6698  0.5197  0.6615   \n","dt               Decision Tree Classifier    0.6409  0.6727  0.5919  0.6424   \n","ridge                    Ridge Classifier    0.5924  0.0000  0.4329  0.5851   \n","lda          Linear Discriminant Analysis    0.5897  0.6568  0.5123  0.5803   \n","lr                    Logistic Regression    0.5681  0.4974  0.3333  0.3227   \n","dummy                    Dummy Classifier    0.5681  0.5000  0.3333  0.3227   \n","nb                            Naive Bayes    0.5654  0.5773  0.3343  0.3368   \n","qda       Quadratic Discriminant Analysis    0.5252  0.5050  0.3522  0.4592   \n","knn                K Neighbors Classifier    0.4933  0.5035  0.3357  0.4465   \n","svm                   SVM - Linear Kernel    0.3771  0.0000  0.3337  0.3774   \n","\n","              F1   Kappa     MCC  TT (Sec)  \n","lightgbm  0.7004  0.4429  0.4540     6.608  \n","rf        0.7001  0.4438  0.4525    45.347  \n","et        0.6829  0.4149  0.4196    55.474  \n","gbc       0.6643  0.3737  0.3934   151.943  \n","ada       0.6147  0.2869  0.3220    11.089  \n","dt        0.6416  0.3571  0.3572     2.879  \n","ridge     0.5332  0.1420  0.1764     0.310  \n","lda       0.5504  0.1913  0.2126     4.218  \n","lr        0.4116  0.0000  0.0000     9.509  \n","dummy     0.4116  0.0000  0.0000     0.122  \n","nb        0.4122  0.0004  0.0020     0.297  \n","qda       0.4449  0.0150  0.0176     2.467  \n","knn       0.4591  0.0020  0.0021     5.055  \n","svm       0.2374 -0.0003  0.0044    93.755  "],"text/html":["\n","  <div id=\"df-d1a983a6-b7f5-469e-9e7e-2f9c59320c7f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Accuracy</th>\n","      <th>AUC</th>\n","      <th>Recall</th>\n","      <th>Prec.</th>\n","      <th>F1</th>\n","      <th>Kappa</th>\n","      <th>MCC</th>\n","      <th>TT (Sec)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>lightgbm</th>\n","      <td>Light Gradient Boosting Machine</td>\n","      <td>0.7104</td>\n","      <td>0.8043</td>\n","      <td>0.6095</td>\n","      <td>0.7115</td>\n","      <td>0.7004</td>\n","      <td>0.4429</td>\n","      <td>0.4540</td>\n","      <td>6.608</td>\n","    </tr>\n","    <tr>\n","      <th>rf</th>\n","      <td>Random Forest Classifier</td>\n","      <td>0.7087</td>\n","      <td>0.8028</td>\n","      <td>0.6146</td>\n","      <td>0.7079</td>\n","      <td>0.7001</td>\n","      <td>0.4438</td>\n","      <td>0.4525</td>\n","      <td>45.347</td>\n","    </tr>\n","    <tr>\n","      <th>et</th>\n","      <td>Extra Trees Classifier</td>\n","      <td>0.6895</td>\n","      <td>0.7810</td>\n","      <td>0.6047</td>\n","      <td>0.6857</td>\n","      <td>0.6829</td>\n","      <td>0.4149</td>\n","      <td>0.4196</td>\n","      <td>55.474</td>\n","    </tr>\n","    <tr>\n","      <th>gbc</th>\n","      <td>Gradient Boosting Classifier</td>\n","      <td>0.6814</td>\n","      <td>0.7715</td>\n","      <td>0.5662</td>\n","      <td>0.6858</td>\n","      <td>0.6643</td>\n","      <td>0.3737</td>\n","      <td>0.3934</td>\n","      <td>151.943</td>\n","    </tr>\n","    <tr>\n","      <th>ada</th>\n","      <td>Ada Boost Classifier</td>\n","      <td>0.6470</td>\n","      <td>0.6698</td>\n","      <td>0.5197</td>\n","      <td>0.6615</td>\n","      <td>0.6147</td>\n","      <td>0.2869</td>\n","      <td>0.3220</td>\n","      <td>11.089</td>\n","    </tr>\n","    <tr>\n","      <th>dt</th>\n","      <td>Decision Tree Classifier</td>\n","      <td>0.6409</td>\n","      <td>0.6727</td>\n","      <td>0.5919</td>\n","      <td>0.6424</td>\n","      <td>0.6416</td>\n","      <td>0.3571</td>\n","      <td>0.3572</td>\n","      <td>2.879</td>\n","    </tr>\n","    <tr>\n","      <th>ridge</th>\n","      <td>Ridge Classifier</td>\n","      <td>0.5924</td>\n","      <td>0.0000</td>\n","      <td>0.4329</td>\n","      <td>0.5851</td>\n","      <td>0.5332</td>\n","      <td>0.1420</td>\n","      <td>0.1764</td>\n","      <td>0.310</td>\n","    </tr>\n","    <tr>\n","      <th>lda</th>\n","      <td>Linear Discriminant Analysis</td>\n","      <td>0.5897</td>\n","      <td>0.6568</td>\n","      <td>0.5123</td>\n","      <td>0.5803</td>\n","      <td>0.5504</td>\n","      <td>0.1913</td>\n","      <td>0.2126</td>\n","      <td>4.218</td>\n","    </tr>\n","    <tr>\n","      <th>lr</th>\n","      <td>Logistic Regression</td>\n","      <td>0.5681</td>\n","      <td>0.4974</td>\n","      <td>0.3333</td>\n","      <td>0.3227</td>\n","      <td>0.4116</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>9.509</td>\n","    </tr>\n","    <tr>\n","      <th>dummy</th>\n","      <td>Dummy Classifier</td>\n","      <td>0.5681</td>\n","      <td>0.5000</td>\n","      <td>0.3333</td>\n","      <td>0.3227</td>\n","      <td>0.4116</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.122</td>\n","    </tr>\n","    <tr>\n","      <th>nb</th>\n","      <td>Naive Bayes</td>\n","      <td>0.5654</td>\n","      <td>0.5773</td>\n","      <td>0.3343</td>\n","      <td>0.3368</td>\n","      <td>0.4122</td>\n","      <td>0.0004</td>\n","      <td>0.0020</td>\n","      <td>0.297</td>\n","    </tr>\n","    <tr>\n","      <th>qda</th>\n","      <td>Quadratic Discriminant Analysis</td>\n","      <td>0.5252</td>\n","      <td>0.5050</td>\n","      <td>0.3522</td>\n","      <td>0.4592</td>\n","      <td>0.4449</td>\n","      <td>0.0150</td>\n","      <td>0.0176</td>\n","      <td>2.467</td>\n","    </tr>\n","    <tr>\n","      <th>knn</th>\n","      <td>K Neighbors Classifier</td>\n","      <td>0.4933</td>\n","      <td>0.5035</td>\n","      <td>0.3357</td>\n","      <td>0.4465</td>\n","      <td>0.4591</td>\n","      <td>0.0020</td>\n","      <td>0.0021</td>\n","      <td>5.055</td>\n","    </tr>\n","    <tr>\n","      <th>svm</th>\n","      <td>SVM - Linear Kernel</td>\n","      <td>0.3771</td>\n","      <td>0.0000</td>\n","      <td>0.3337</td>\n","      <td>0.3774</td>\n","      <td>0.2374</td>\n","      <td>-0.0003</td>\n","      <td>0.0044</td>\n","      <td>93.755</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1a983a6-b7f5-469e-9e7e-2f9c59320c7f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d1a983a6-b7f5-469e-9e7e-2f9c59320c7f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d1a983a6-b7f5-469e-9e7e-2f9c59320c7f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-2321266daa0d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mEnsemble_Model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mblend_models\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcompare_models\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'soft'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pycaret/classification.py\u001b[0m in \u001b[0;36mblend_models\u001b[0;34m(estimator_list, fold, round, choose_better, optimize, method, weights, fit_kwargs, groups, probability_threshold, verbose, return_train_score)\u001b[0m\n\u001b[1;32m   1421\u001b[0m         \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverbose\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1422\u001b[0m         \u001b[0mprobability_threshold\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mprobability_threshold\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1423\u001b[0;31m         \u001b[0mreturn_train_score\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mreturn_train_score\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1424\u001b[0m     )\n\u001b[1;32m   1425\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pycaret/internal/tabular.py\u001b[0m in \u001b[0;36mblend_models\u001b[0;34m(estimator_list, fold, round, choose_better, optimize, method, weights, fit_kwargs, groups, probability_threshold, verbose, display, return_train_score)\u001b[0m\n\u001b[1;32m   5311\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5312\u001b[0m     \u001b[0;31m# checking error for estimator_list\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5313\u001b[0;31m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mestimator_list\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5314\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"fit\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5315\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Estimator {i} does not have the required fit() method.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'LGBMClassifier' object is not iterable"]}]},{"cell_type":"code","source":["df_test_values = pd.read_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/test_values.csv\")\n","predict_model(Ensemble_Model, data=df_test_values).Label.value_counts()"],"metadata":{"id":"RbdM07-i6RrK","executionInfo":{"status":"aborted","timestamp":1654198255185,"user_tz":180,"elapsed":10,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Ensemble_Model"],"metadata":{"id":"u72g5BmI6ZVF","executionInfo":{"status":"aborted","timestamp":1654198255186,"user_tz":180,"elapsed":11,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["final_knn = finalize_model(Ensemble_Model)"],"metadata":{"id":"0vsc8ejR6g0o","executionInfo":{"status":"aborted","timestamp":1654198255189,"user_tz":180,"elapsed":14,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["save_model(final_knn,\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/Ensemble_Model_Soft_Full\")"],"metadata":{"id":"kSRaawEE6nqm","executionInfo":{"status":"aborted","timestamp":1654198255503,"user_tz":180,"elapsed":328,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["saved_final_knn = load_model(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/Ensemble_Model_Soft_Full\")"],"metadata":{"id":"uUNeiSGT6rTN","executionInfo":{"status":"aborted","timestamp":1654198255504,"user_tz":180,"elapsed":329,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predictions = predict_model(saved_final_knn, data=df_test_values)"],"metadata":{"id":"whv_ep-F6sdv","executionInfo":{"status":"aborted","timestamp":1654198255506,"user_tz":180,"elapsed":331,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predictions.head()"],"metadata":{"id":"m_ix0Ol36t_d","executionInfo":{"status":"aborted","timestamp":1654198255507,"user_tz":180,"elapsed":332,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["target = []\n","\n","for n in predictions.Label:\n","    if n == 0:\n","        target.append(1)\n","    elif n == 1:\n","        target.append(2)\n","    elif n == 2:\n","        target.append(3)"],"metadata":{"id":"CzvOjzfx6vPJ","executionInfo":{"status":"aborted","timestamp":1654198255507,"user_tz":180,"elapsed":332,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predictions[\"damage_grade\"] = target"],"metadata":{"id":"hVMn32n36w2X","executionInfo":{"status":"aborted","timestamp":1654198255507,"user_tz":180,"elapsed":332,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predictions[[\"building_id\",\"damage_grade\"]].to_csv(\"/content/drive/My Drive/Colab Notebooks/Richter's Predictor: Modeling Earthquake Damage/data/Ensemble_Model_Soft_Full.csv\", index=False)"],"metadata":{"id":"3031kSLL6yIe","executionInfo":{"status":"aborted","timestamp":1654198255507,"user_tz":180,"elapsed":331,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_model(Ensemble_Model, plot = 'confusion_matrix')"],"metadata":{"id":"A_rnga3964SH","executionInfo":{"status":"aborted","timestamp":1654198255508,"user_tz":180,"elapsed":332,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_model(Ensemble_Model, plot = 'feature_all')"],"metadata":{"id":"9uz7AYN465cZ","executionInfo":{"status":"aborted","timestamp":1654198255508,"user_tz":180,"elapsed":332,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_model(Ensemble_Model, plot = 'auc')"],"metadata":{"id":"oXpXkS2D68ED","executionInfo":{"status":"aborted","timestamp":1654198255508,"user_tz":180,"elapsed":332,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_model(Ensemble_Model, plot = 'parameter')"],"metadata":{"id":"EQq7toK56-ew","executionInfo":{"status":"aborted","timestamp":1654198255508,"user_tz":180,"elapsed":332,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_model(Ensemble_Model, plot = 'error')"],"metadata":{"id":"x0AoShbk7Ah9","executionInfo":{"status":"aborted","timestamp":1654198255509,"user_tz":180,"elapsed":333,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_model(Ensemble_Model, plot='boundary')"],"metadata":{"id":"FcJoIGav7CjK","executionInfo":{"status":"aborted","timestamp":1654198255509,"user_tz":180,"elapsed":333,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"b5lEbahP7Kye","executionInfo":{"status":"aborted","timestamp":1654198255509,"user_tz":180,"elapsed":333,"user":{"displayName":"Antonio Santos","userId":"03265893617080544823"}}},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":["S1SjD-NU1pmB","EzuQlWAIdlLY","TDKD1ZGsRaHt"],"name":"Treinamento - Blend Models","provenance":[],"authorship_tag":"ABX9TyNGxgele276ySq5h3oeJXdE"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"aab6a30731294427a554c19ca62b9ffe":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_bb71c0b68dce4dd0b667d8a236a72031","max":74,"min":0,"orientation":"horizontal","style":"IPY_MODEL_89b676b046b5410797a52bd040723077","value":74}},"bb71c0b68dce4dd0b667d8a236a72031":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"89b676b046b5410797a52bd040723077":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1f3872d231b2493f873bc3bb62445c1a":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_2274ed34f62d4e63b9e5ab0a763f79a1","max":74,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a8eee97b616943ee859bdd0402249746","value":74}},"2274ed34f62d4e63b9e5ab0a763f79a1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a8eee97b616943ee859bdd0402249746":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b56c2d21ccde4b4b800295a39711d657":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_68f20b9bc2c14acd87c69dc94a856e92","max":6,"min":0,"orientation":"horizontal","style":"IPY_MODEL_304ea2211cfa410aaf35014c9872c8ab","value":6}},"68f20b9bc2c14acd87c69dc94a856e92":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"304ea2211cfa410aaf35014c9872c8ab":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6d099923de504c44b4716acb7857f1fb":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_2768386095cb41de8b7ccdcba3d4db1f","max":3,"min":0,"orientation":"horizontal","style":"IPY_MODEL_cff29f793e0049b7a4b1f1de845fa15a","value":3}},"2768386095cb41de8b7ccdcba3d4db1f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cff29f793e0049b7a4b1f1de845fa15a":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0fa35aa5032943ba9d7d1a91b7299b33":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_7ef913b5601647d296e1d57604844409","max":3,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2431868e43f74d73953d55ca120f58b0","value":3}},"7ef913b5601647d296e1d57604844409":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2431868e43f74d73953d55ca120f58b0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fa17d20b3f494f17a7004ab84f8d1384":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_8d92198663274974b457e7131404c2e3","max":74,"min":0,"orientation":"horizontal","style":"IPY_MODEL_818f1947ae0149e4a72ba21d52bf4a0c","value":74}},"8d92198663274974b457e7131404c2e3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"818f1947ae0149e4a72ba21d52bf4a0c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}}}}},"nbformat":4,"nbformat_minor":0}